<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>学习计划</title>
    <url>/2019/11/05/blog-plan/</url>
    <content><![CDATA[<span id="more"></span>

<ul>
<li><input checked="" disabled="" type="checkbox"> <strong>SoftetherVPN</strong></li>
<li><input checked="" disabled="" type="checkbox"> <strong>Prometheus</strong></li>
<li><input disabled="" type="checkbox"> <strong>Packetfence</strong></li>
<li><input disabled="" type="checkbox"> <strong>Proxmox</strong></li>
<li><input disabled="" type="checkbox"> <strong>Deepin-Wine-Ubuntu</strong></li>
<li><input disabled="" type="checkbox"> <strong>Ansible</strong></li>
<li><input disabled="" type="checkbox"> <strong>JumpServer</strong></li>
<li><input disabled="" type="checkbox"> <strong>Webpy实战应用</strong></li>
<li><input disabled="" type="checkbox"> <strong>RHCE</strong></li>
<li><input disabled="" type="checkbox"> <strong>CCNP/HCNP</strong></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Typora阿里云图床配置</title>
    <url>/2021/04/10/aliyunoss/</url>
    <content><![CDATA[<blockquote>
<p>博主之前有尝试过白嫖七牛云的免费图床，但是七牛云提供的免费域名每30天会重置一次，也就是每个月都需要迁移一次数据，十分麻烦。或者绑定自有域名，前提是需要进行过icp备案，由于博主的域名目前无法备案，所以只能咬牙上了阿里云付费图床，痛失9块大洋o(╥﹏╥)o</p>
<p>这里推荐有ICP备案的域名的小伙伴可以尝试下七牛云的免费图床，10G月流量勉强够用，白嫖它不香吗！</p>
</blockquote>
<h2 id="一、开通阿里云OSS对象存储"><a href="#一、开通阿里云OSS对象存储" class="headerlink" title="一、开通阿里云OSS对象存储"></a>一、开通阿里云OSS对象存储</h2><p>进入OSS控制台：<a href="https://oss.console.aliyun.com/overview">https://oss.console.aliyun.com/overview</a></p>
<p>创建Bucket，配置如下图所示</p>
<ul>
<li>注意读写权限需要选择公共读</li>
</ul>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210410232405558.png" alt=""></p>
<h2 id="二、购买OSS资源包"><a href="#二、购买OSS资源包" class="headerlink" title="二、购买OSS资源包"></a>二、购买OSS资源包</h2><p>在控制面板搜索资源包，进入购买页面，这里选择比较经济的40G流量套餐，费用是9元/年（要啥自行车）</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210410232425006.png" alt=""></p>
<h2 id="三、配置Typora图片服务"><a href="#三、配置Typora图片服务" class="headerlink" title="三、配置Typora图片服务"></a>三、配置Typora图片服务</h2><p>打开typora，找到图片上传配置，选择PicGo-Core服务（第一次使用服务的话需要先点击下载按钮进行安装）。点击打开配置文件：</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210410233411095.png" alt=""></p>
<p>将下面的内容复制到picgo配置文件中：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>
    <span class="token property">"picBed"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token property">"uploader"</span><span class="token operator">:</span> <span class="token string">"aliyun"</span><span class="token punctuation">,</span>
      <span class="token property">"aliyun"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token property">"accessKeyId"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
      <span class="token property">"accessKeySecret"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
      <span class="token property">"bucket"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment">// 存储空间名</span>
      <span class="token property">"area"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment">// 存储区域代号</span>
      <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"img/"</span><span class="token punctuation">,</span> <span class="token comment">// 自定义存储路径</span>
       <span class="token property">"customUrl"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment">// 自定义域名，注意要加 http://或者 https://</span>
       <span class="token property">"options"</span><span class="token operator">:</span> <span class="token string">""</span> <span class="token comment">// 针对图片的一些后缀处理参数 PicGo 2.2.0+ PicGo-Core 1.4.0+</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token property">"picgoPlugins"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210410233621985.png" alt=""></p>
<p>接下来需要到阿里云找到配置需要的字段</p>
<p>首先点击打开控制台面板并创建AccessKey</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210410232636592.png" alt=""></p>
<p>将创建的AccessKeyID和Secret复制到配置文件中</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210410232819086.png" alt=""></p>
<p>然后回到OSS控制面板，进入之前创建的Bucket页面，点击预览</p>
<ul>
<li>左上角<code>newmorning</code>即为我的bucket名称，填写到配置文件的<code>bucket</code>字段中</li>
<li>Endpoint中的<code>oss-cn-shanghai</code>即为我的bucket区域，填写到配置文件中的<code>area</code>字段中</li>
</ul>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210410233930315.png" alt=""></p>
<p>配置文件完成后记得CtrlS保存</p>
<p>博主这里完整的配置文件可供参考：</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210411002615946.png" alt=""></p>
<p>最后验证下配置是否生效</p>
<p>返回Typora图片服务，点击验证图片上传选项，返回结果上传成功</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210411003001059.png" alt=""></p>
<p>如果提示上传失败，首先查看返回的程序运行结果，然后排查picgo日志，绝大部分错误都是Bucket读写权限以及AccessKey ID和Secret配置错误导致，可以重点排查。</p>
<p>最后，Have a nice day~</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>图床</tag>
        <tag>CDN</tag>
        <tag>OSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Pull Mysql</title>
    <url>/2020/08/21/docker-mysql/</url>
    <content><![CDATA[<h3 id="1-拉取mysql镜像"><a href="#1-拉取mysql镜像" class="headerlink" title="1.拉取mysql镜像"></a>1.拉取mysql镜像</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker pull mysql:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="2-启动容器"><a href="#2-启动容器" class="headerlink" title="2.启动容器"></a>2.启动容器</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker run --restart&#x3D;always -d -v &#x2F;root&#x2F;mysql&#x2F;conf&#x2F;my.cnf:&#x2F;etc&#x2F;mysql&#x2F;my.cnf -p 3306:3306 --name webpy-mysql -e MYSQL_ROOT_PASSWORD&#x3D;Warp1234 mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="3-进入容器"><a href="#3-进入容器" class="headerlink" title="3.进入容器"></a>3.进入容器</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker exec -it webpy-mysql bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="4-mysql初始化"><a href="#4-mysql初始化" class="headerlink" title="4.mysql初始化"></a>4.mysql初始化</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">mysql -u root -p

#重置root密码
ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;Warp1234&#39;;

#添加远程登录用户
CREATE USER &#39;xinchen.luan&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;123456&#39;;
GRANT ALL PRIVILEGES ON *.* TO &#39;xinchen.luan&#39;@&#39;%&#39;;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="Plugin报错解决"><a href="#Plugin报错解决" class="headerlink" title="* Plugin报错解决"></a>* Plugin报错解决</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">select host,user,plugin from user;
alter user &#39;root&#39;@&#39;%&#39; identified with mysql_native_password by &#39;Warp234&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Git常见流程</title>
    <url>/2020/06/19/git-manual/</url>
    <content><![CDATA[<h4 id="Git-常见流程"><a href="#Git-常见流程" class="headerlink" title="Git 常见流程"></a>Git 常见流程</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># clone远端仓库到本地</span>
$ <span class="token function">git</span> clone http://github.com/jquery/jquery.git
<span class="token comment"># 进入工作区（本地的仓库目录，称为工作区）</span>
$ <span class="token builtin class-name">cd</span> jquery
$ <span class="token function">touch</span> <span class="token builtin class-name">test</span>
<span class="token comment"># 将创建的test文件加入暂存区</span>
<span class="token comment"># git rm test 移出暂存区</span>
<span class="token comment"># git add -all 将所有文件加入暂存区</span>
$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">test</span>
<span class="token comment"># 查看暂存区状态</span>
$ <span class="token function">git</span> status
<span class="token comment"># 查看文件改动明细</span>
$ <span class="token function">git</span> <span class="token function">diff</span>
<span class="token comment"># 提交暂存区，备注“test commit”</span>
$ <span class="token function">git</span> commit -m <span class="token string">"test commit"</span>
<span class="token comment"># 查看当前分支</span>
$ <span class="token function">git</span> branch
<span class="token comment"># 查看远端仓库源</span>
$ <span class="token function">git</span> remote -v
<span class="token comment"># 推送变更到远端，分支为master</span>
$ <span class="token function">git</span> push -u origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成ssh-rsa密钥，用作远端仓库</span>
$ ssh-keygen -t rsa -C <span class="token string">"youremail@example.com"</span>

<span class="token comment"># 创建dev分支</span>
<span class="token comment"># git branch -d dev 删除dev分支</span>
$ <span class="token function">git</span> checkout dev
<span class="token comment"># 切换到dev分支</span>
$ <span class="token function">git</span> switch dev

<span class="token comment"># 创建并切换到dev分支</span>
$ <span class="token function">git</span> switch -c dev

<span class="token comment"># 合并dev分支到当前分支</span>
$ <span class="token function">git</span> merge dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://mp.weixin.qq.com/s/mbuApV5nZaJxep9M-i_UFA">https://mp.weixin.qq.com/s/mbuApV5nZaJxep9M-i_UFA</a></p>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>记一次Ubuntu fsck code4报错处理</title>
    <url>/2020/05/19/fsck-4/</url>
    <content><![CDATA[<p>Ubuntu OS在一次断电重启后无法开机，通过BMC发现引导过程中出现如下报错：</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;dev&#x2F;sda1: UNEXPECTED INCONSISTENCY; RUN fsck MANUALLY.
        (i.e., without -a or -p options)
fsck exited with status code 4
The root filesystem on &#x2F;dev&#x2F;sda1 requires a manual fsck<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>记录下解决方法</p>
<span id="more"></span>

<h3 id="出错原因："><a href="#出错原因：" class="headerlink" title="出错原因："></a>出错原因：</h3><p>分区损坏，磁盘检测不能通过，可能是因为系统突然断电或其它未正常关闭系统导致。</p>
<h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>根据上面的错误提示，可以发现是sda1出错，使用fsck对sda1进行修复：</p>
<pre class="line-numbers language-none"><code class="language-none">$ fsck  -y &#x2F;dev&#x2F;sda1
#修复中...
$ reboot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>重启后正常引导进入系统。</p>
]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Git代理的使用和取消</title>
    <url>/2019/10/24/gitproxy/</url>
    <content><![CDATA[<p>因为git被半墙的原因，部署Hexo时一直卡在git，使用<code>npm config set registry</code>更换npm为淘宝源后，又卡在git clone landscape ，landscape是hexo的默认主题，托管在 Github上，clone 的指令是内置在 hexo-cli 的 install.js 中的。这个时候就算 npm 换源，这一步也绕不过去，看着5Kb/s的clone速度忍不住再一次对GFW爆粗，无奈只能使用代理服务器</p>
<span id="more"></span>

<h2 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h2><h4 id="http-https"><a href="#http-https" class="headerlink" title="http/https"></a>http/https</h4><pre class="line-numbers language-none"><code class="language-none">git config --global https.proxy https:&#x2F;&#x2F;127.0.0.1:1080
git config --global http.proxy http:&#x2F;&#x2F;127.0.0.1:1080<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h4 id="ss-ssr"><a href="#ss-ssr" class="headerlink" title="ss/ssr"></a>ss/ssr</h4><pre class="line-numbers language-none"><code class="language-none">git config --global https.proxy &#39;socks5:&#x2F;&#x2F;127.0.0.1:1080&#39;
git config --global http.proxy &#39;socks5:&#x2F;&#x2F;127.0.0.1:1080&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="取消代理"><a href="#取消代理" class="headerlink" title="取消代理"></a>取消代理</h2><pre class="line-numbers language-none"><code class="language-none">git config --global --unset http.proxy
git config --global --unset https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Proxy</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>GitPage绑定自有域名</title>
    <url>/2021/04/11/hexo-domain-setting/</url>
    <content><![CDATA[<ol>
<li>进入阿里云域名解析控制台<a href="https://dns.console.aliyun.com/">https://dns.console.aliyun.com/</a></li>
<li>添加两条解析记录<ul>
<li>记录类型选择CNAME</li>
<li>主机记录分别为@和www</li>
<li>记录值为自己的GitPage地址</li>
</ul>
</li>
</ol>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210411172044930.png" alt=""></p>
<ol start="3">
<li>进入GitPage仓库，新增一个CNAME文件</li>
</ol>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210411172503033.png" alt=""></p>
<ol start="4">
<li>文件名为CNAME，内容为刚才解析的域名</li>
</ol>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210411172413048.png" alt=""></p>
<p>5.提交文件后，等待DNS刷新后，即可使用域名访问GitPage</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210411172819384.png" alt=""></p>
<p>And always，have a nice day！</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
        <tag>域名解析</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器硬件配置采集脚本</title>
    <url>/2020/08/28/hwinfo/</url>
    <content><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>此脚本主要基于<code>pciutils</code>、<code>dmidecode</code>、<code>smartmontools</code>获取以下硬件配置信息，并通过POST方法触发写入远端数据库。</p>
<ul>
<li>系统信息：系统厂商、型号、序列号、Hostname、操作系统版本、内核版本、ip地址.</li>
<li>CPU信息：CPU型号、物理CPU数量、每CPU核心数量、总线程数量.</li>
<li>内存信息：内存总容量、内存插槽总数、已用内存插槽数量、插槽类型、遍历各插槽内存容量&amp;频率.</li>
<li>硬盘信息：硬盘总数量、遍历硬盘型号&amp;容量&amp;规格.</li>
<li>网卡信息：网卡总数量、遍历网卡型号.</li>
</ul>
<span id="more"></span>

<h3 id="系统支持"><a href="#系统支持" class="headerlink" title="系统支持"></a>系统支持</h3><p>CentOS7+、RHEL7+、Ubuntu16+、UOS2.0、Neokylin4.0+</p>
<h3 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h3><p>切换到root用户并执行以下命令：</p>
<p><code>. &lt;(curl -Ls https://raw.githubusercontent.com/luanxinchen/hwInfo/master/hwinfo.sh)</code></p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/005DqEfjgy1girbhpro8yj30hj0j0aba.jpg" alt=""></p>
<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/luanxinchen/hwInfo">https://github.com/luanxinchen/hwInfo</a></p>
]]></content>
      <categories>
        <category>Server</category>
      </categories>
      <tags>
        <tag>Server</tag>
        <tag>Hardware</tag>
      </tags>
  </entry>
  <entry>
    <title>LVM分区的缩扩容操作</title>
    <url>/2021/02/26/lvm-extend/</url>
    <content><![CDATA[<ul>
<li>首先使用lvscan命令扫描LVM分区，确认缩扩容方案（这里将home分区缩减至10G，剩余空间全部分配至root分区）</li>
</ul>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># lvscan</span>
  ACTIVE            <span class="token string">'/dev/centos/swap'</span> <span class="token punctuation">[</span><span class="token number">7.75</span> GiB<span class="token punctuation">]</span> inherit
  ACTIVE            <span class="token string">'/dev/centos/home'</span> <span class="token punctuation">[</span><span class="token number">41.70</span> GiB<span class="token punctuation">]</span> inherit
  ACTIVE            <span class="token string">'/dev/centos/root'</span> <span class="token punctuation">[</span><span class="token number">50.00</span> GiB<span class="token punctuation">]</span> inherit
<span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># lsblk</span>
NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
fd0               <span class="token number">2</span>:0    <span class="token number">1</span>    4K  <span class="token number">0</span> disk
sda               <span class="token number">8</span>:0    <span class="token number">0</span>  100G  <span class="token number">0</span> disk
├─sda1            <span class="token number">8</span>:1    <span class="token number">0</span>  500M  <span class="token number">0</span> part /boot
└─sda2            <span class="token number">8</span>:2    <span class="token number">0</span> <span class="token number">99</span>.5G  <span class="token number">0</span> part
  ├─centos-root <span class="token number">253</span>:0    <span class="token number">0</span>   50G  <span class="token number">0</span> lvm  /
  ├─centos-swap <span class="token number">253</span>:1    <span class="token number">0</span>  <span class="token number">7</span>.8G  <span class="token number">0</span> lvm  <span class="token punctuation">[</span>SWAP<span class="token punctuation">]</span>
  └─centos-home <span class="token number">253</span>:2    <span class="token number">0</span> <span class="token number">41</span>.7G  <span class="token number">0</span> lvm
sr0              <span class="token number">11</span>:0    <span class="token number">1</span> 1024M  <span class="token number">0</span> rom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ul>
<li>接下来备份home分区至tmp目录，（若home分区文件较多，可使用xfsdump工具进行备份）</li>
</ul>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># cp -R /home/ /tmp/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<ul>
<li>备份完成后，卸载home分区（卸载时若出现target busy，可使用fuser -km /home命令强制终止相关进程）</li>
</ul>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># umount /home</span>
umount: /home：目标忙。
        <span class="token punctuation">(</span>有些情况下通过 lsof<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> 或 fuser<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> 可以
         找到有关使用该设备的进程的有用信息<span class="token punctuation">)</span>
<span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># fuser -km /home</span>
/home:               19524ce
<span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># umount /home</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<ul>
<li>接下来使用lvreduce命令，将home分区缩减到10G</li>
</ul>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># lvreduce -L 10G /dev/centos/home</span>
  WARNING: Reducing active logical volume to <span class="token number">10.00</span> GiB
  THIS MAY DESTROY YOUR DATA <span class="token punctuation">(</span>filesystem etc.<span class="token punctuation">)</span>
Do you really want to reduce home? <span class="token punctuation">[</span>y/n<span class="token punctuation">]</span>: y
  Size of logical volume centos/home changed from <span class="token number">41.70</span> GiB <span class="token punctuation">(</span><span class="token number">10674</span> extents<span class="token punctuation">)</span> to <span class="token number">10.00</span> GiB <span class="token punctuation">(</span><span class="token number">2560</span> extents<span class="token punctuation">)</span>.
  Logical volume home successfully resized.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<ul>
<li>使用lvextend命令将压缩出来的可用空间全部分配至root分区</li>
</ul>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># lvextend -l +100%FREE /dev/centos/root</span>
  Size of logical volume centos/root changed from <span class="token number">50.00</span> GiB <span class="token punctuation">(</span><span class="token number">12800</span> extents<span class="token punctuation">)</span> to <span class="token number">81.76</span> GiB <span class="token punctuation">(</span><span class="token number">20930</span> extents<span class="token punctuation">)</span>.
  Logical volume root successfully resized.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>



<ul>
<li>使用xfs_growfs延展root分区（分区格式为ext2/3/4时，使用resize2fs命令）</li>
</ul>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># xfs_growfs /dev/centos/root</span>
meta-data<span class="token operator">=</span>/dev/mapper/centos-root <span class="token assign-left variable">isize</span><span class="token operator">=</span><span class="token number">256</span>    <span class="token assign-left variable">agcount</span><span class="token operator">=</span><span class="token number">4</span>, <span class="token assign-left variable">agsize</span><span class="token operator">=</span><span class="token number">3276800</span> blks
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">attr</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">projid32bit</span><span class="token operator">=</span><span class="token number">1</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">crc</span><span class="token operator">=</span><span class="token number">0</span>        <span class="token assign-left variable">finobt</span><span class="token operator">=</span><span class="token number">0</span>
data     <span class="token operator">=</span>                       <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">13107200</span>, <span class="token assign-left variable">imaxpct</span><span class="token operator">=</span><span class="token number">25</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span>      <span class="token assign-left variable">swidth</span><span class="token operator">=</span><span class="token number">0</span> blks
naming   <span class="token operator">=</span>version <span class="token number">2</span>              <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   ascii-ci<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">ftype</span><span class="token operator">=</span><span class="token number">0</span>
log      <span class="token operator">=</span>internal               <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">6400</span>, <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">2</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span> blks, lazy-count<span class="token operator">=</span><span class="token number">1</span>
realtime <span class="token operator">=</span>none                   <span class="token assign-left variable">extsz</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">rtextents</span><span class="token operator">=</span><span class="token number">0</span>
data blocks changed from <span class="token number">13107200</span> to <span class="token number">21432320</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<ul>
<li>接下来恢复home分区，首先将压缩后的home分区格式化</li>
</ul>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># mkfs.xfs -f /dev/mapper/centos-home</span>
meta-data<span class="token operator">=</span>/dev/mapper/centos-home <span class="token assign-left variable">isize</span><span class="token operator">=</span><span class="token number">256</span>    <span class="token assign-left variable">agcount</span><span class="token operator">=</span><span class="token number">4</span>, <span class="token assign-left variable">agsize</span><span class="token operator">=</span><span class="token number">655360</span> blks
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">attr</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">projid32bit</span><span class="token operator">=</span><span class="token number">1</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">crc</span><span class="token operator">=</span><span class="token number">0</span>        <span class="token assign-left variable">finobt</span><span class="token operator">=</span><span class="token number">0</span>
data     <span class="token operator">=</span>                       <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">2621440</span>, <span class="token assign-left variable">imaxpct</span><span class="token operator">=</span><span class="token number">25</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span>      <span class="token assign-left variable">swidth</span><span class="token operator">=</span><span class="token number">0</span> blks
naming   <span class="token operator">=</span>version <span class="token number">2</span>              <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   ascii-ci<span class="token operator">=</span><span class="token number">0</span> <span class="token assign-left variable">ftype</span><span class="token operator">=</span><span class="token number">0</span>
log      <span class="token operator">=</span>internal log           <span class="token assign-left variable">bsize</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">2560</span>, <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token number">2</span>
         <span class="token operator">=</span>                       <span class="token assign-left variable">sectsz</span><span class="token operator">=</span><span class="token number">512</span>   <span class="token assign-left variable">sunit</span><span class="token operator">=</span><span class="token number">0</span> blks, lazy-count<span class="token operator">=</span><span class="token number">1</span>
realtime <span class="token operator">=</span>none                   <span class="token assign-left variable">extsz</span><span class="token operator">=</span><span class="token number">4096</span>   <span class="token assign-left variable">blocks</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">rtextents</span><span class="token operator">=</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<ul>
<li>挂载home分区，恢复原home分区文件</li>
</ul>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># mount /home</span>
<span class="token punctuation">[</span>root@it-zoomvpn-master ~<span class="token punctuation">]</span><span class="token comment"># cp -R /tmp/home/ /</span>
<span class="token punctuation">[</span>root@it-zoomvpn-master home<span class="token punctuation">]</span><span class="token comment"># ll /home</span>
总用量 <span class="token number">8</span>
drwx------.  <span class="token number">6</span> root root <span class="token number">4096</span> <span class="token number">2</span>月  <span class="token number">26</span> <span class="token number">17</span>:25 ituser
drwx------. <span class="token number">14</span> root root <span class="token number">4096</span> <span class="token number">2</span>月  <span class="token number">26</span> <span class="token number">17</span>:25 tom
<span class="token punctuation">[</span>root@it-zoomvpn-master home<span class="token punctuation">]</span><span class="token comment"># chown -R ituser:ituser /home/ituser/</span>
<span class="token comment">#恢复过来的文件夹owner是root，这里需要手动更改为正确的owner</span>
<span class="token punctuation">[</span>root@it-zoomvpn-master home<span class="token punctuation">]</span><span class="token comment"># ll</span>
总用量 <span class="token number">8</span>
drwx------.  <span class="token number">6</span> ituser ituser <span class="token number">4096</span> <span class="token number">2</span>月  <span class="token number">26</span> <span class="token number">17</span>:25 ituser
drwx------. <span class="token number">14</span> root   root   <span class="token number">4096</span> <span class="token number">2</span>月  <span class="token number">26</span> <span class="token number">17</span>:25 tom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<ul>
<li>最后确认下各分区空间，扩容完成。</li>
</ul>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-zoomvpn-master home<span class="token punctuation">]</span><span class="token comment"># lsblk</span>
NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
fd0               <span class="token number">2</span>:0    <span class="token number">1</span>    4K  <span class="token number">0</span> disk
sda               <span class="token number">8</span>:0    <span class="token number">0</span>  100G  <span class="token number">0</span> disk
├─sda1            <span class="token number">8</span>:1    <span class="token number">0</span>  500M  <span class="token number">0</span> part /boot
└─sda2            <span class="token number">8</span>:2    <span class="token number">0</span> <span class="token number">99</span>.5G  <span class="token number">0</span> part
  ├─centos-root <span class="token number">253</span>:0    <span class="token number">0</span> <span class="token number">81</span>.8G  <span class="token number">0</span> lvm  /
  ├─centos-swap <span class="token number">253</span>:1    <span class="token number">0</span>  <span class="token number">7</span>.8G  <span class="token number">0</span> lvm  <span class="token punctuation">[</span>SWAP<span class="token punctuation">]</span>
  └─centos-home <span class="token number">253</span>:2    <span class="token number">0</span>   10G  <span class="token number">0</span> lvm  /home<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>最后，have a nice day~</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Jumpserver 迁移升级步骤</title>
    <url>/2021/10/19/jumpserver-upgrade/</url>
    <content><![CDATA[<blockquote>
<p>公司原jumpserver环境采用组件容器化部署，根据官方文档所述，未使用installer部署的环境不可直接升级，需要使用installer安装最新版环境后进行数据迁移</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image.png" alt=""></p>
</blockquote>
<h2 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a>数据备份</h2><p>记录原环境config.yml中的数据库信息以及SECRET_KEY和BOOTSTRAP_TOKEN</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">DB_HOST: 127.0.0.1   # 数据库服务器 IP
DB_PORT: 3306        # 数据库服务器 端口
DB_USER: jumpserver  # 连接数据库的用户
DB_PASSWORD: ******  # 连接数据库用户的密码
DB_NAME: jumpserver  # JumpServer 使用的数据库

SECRET_KEY: *******************************
BOOTSTRAP_TOKEN: ************************<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>原环境停机</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">source</span> /opt/py3/bin/activate
./jms stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>备份整个目录</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">cp</span> /opt/jumpserver /opt/jumpserver_bak<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>备份数据库</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">cp</span> /opt/jumpserver /opt/jumpserver_bak<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>修改数据库字符集</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token keyword">if</span> <span class="token function">grep</span> -q <span class="token string">'COLLATE=utf8_bin'</span> /opt/jumpserver.sql<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">cp</span> /opt/jumpserver.sql /opt/jumpserver_bak.sql
    <span class="token function">sed</span> -i <span class="token string">'s@ COLLATE=utf8_bin@@g'</span> /opt/jumpserver.sql
    <span class="token function">sed</span> -i <span class="token string">'s@ COLLATE utf8_bin@@g'</span> /opt/jumpserver.sql
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">"备份数据库字符集正确"</span><span class="token punctuation">;</span>
<span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="Installer部署新环境"><a href="#Installer部署新环境" class="headerlink" title="Installer部署新环境"></a>Installer部署新环境</h2><p>jumpserver官方发布仅维护此安装方式</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-1.png" alt=""></p>
<p>获取installer安装包</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /opt
yum -y <span class="token function">install</span> <span class="token function">wget</span>
<span class="token function">wget</span> https://github.com/jumpserver/installer/releases/download/v2.14.2/jumpserver-installer-v2.14.2.tar.gz
<span class="token function">tar</span> -xf jumpserver-installer-v2.14.2.tar.gz
<span class="token builtin class-name">cd</span> jumpserver-installer-v2.14.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>修改installer的config.txt文件，填写原环境的BOOTSTRAP_TOKEN和SECRET_KEY</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">***
<span class="token comment"># Core 配置</span>
<span class="token comment">### 启动后不能再修改，否则密码等等信息无法解密</span>
<span class="token assign-left variable">SECRET_KEY</span><span class="token operator">=</span>                           <span class="token comment"># 从旧版本的配置文件获取后填入 (*)</span>
<span class="token assign-left variable">BOOTSTRAP_TOKEN</span><span class="token operator">=</span>                      <span class="token comment"># 从旧版本的配置文件获取后填入 (*)</span>
<span class="token assign-left variable">LOG_LEVEL</span><span class="token operator">=</span>ERROR
<span class="token comment"># SESSION_COOKIE_AGE=86400</span>
<span class="token assign-left variable">SESSION_EXPIRE_AT_BROWSER_CLOSE</span><span class="token operator">=</span>true  
***<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>开始部署</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./jmsctl.sh <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>部署成功后启停一次服务，用于初始化数据库</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./jmsctl.sh start
./jmsctl.sh stop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h2><p>进入mysql容器</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker <span class="token builtin class-name">exec</span> -it jms_mysql /bin/bash
mysql -uroot -p<span class="token variable">$MYSQL_ROOT_PASSWORD</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>删除并重新创建默认数据库</p>
<pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">drop database jumpserver;
create database jumpserver default charset &#39;utf8&#39;;
exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>还原数据</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># /opt/jumpserver.sql 为旧版本数据库</span>
./jmsctl.sh restore_db /opt/jumpserver.sql

开始还原数据库: /opt/jumpserver.sql
mysql: <span class="token punctuation">[</span>Warning<span class="token punctuation">]</span> Using a password on the <span class="token builtin class-name">command</span> line interface can be insecure.
数据库恢复成功！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>迁移完成，重启服务</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./jmsctl.sh restart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="开启HTTPS"><a href="#开启HTTPS" class="headerlink" title="开启HTTPS"></a>开启HTTPS</h2><p>修改jumpserver config.txt</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> /opt/jumpserver/config/config.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>开启nginx HTTPS_PORT</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">## Nginx 配置, USE_LB=1 表示开启, 为 0 的情况下, HTTPS_PORT 定义不生效</span>
<span class="token assign-left variable">HTTP_PORT</span><span class="token operator">=</span><span class="token number">80</span>
<span class="token assign-left variable">SSH_PORT</span><span class="token operator">=</span><span class="token number">2222</span>
<span class="token assign-left variable">RDP_PORT</span><span class="token operator">=</span><span class="token number">3389</span>

<span class="token assign-left variable">USE_LB</span><span class="token operator">=</span><span class="token number">1</span>             <span class="token comment">#修改为1</span>
<span class="token assign-left variable">HTTPS_PORT</span><span class="token operator">=</span><span class="token number">443</span>       <span class="token comment">#端口默认443</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>导入证书文件</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#将证书文件放置/opt/jumpserver/config/nginx/cert/目录</span>
ll /opt/jumpserver/config/nginx/cert/
-rw-r--r--. <span class="token number">1</span> root root jumpserver.transwarp.io.bundle.crt
-rw-r--r--. <span class="token number">1</span> root root jumpserver.transwarp.io.key.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>修改nginx配置</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">vim</span> /opt/jumpserver/config/nginx/lb_http_server.conf

server <span class="token punctuation">&#123;</span>
  listen <span class="token number">443</span> ssl<span class="token punctuation">;</span>
  server_name jumpserver.transwarp.io<span class="token punctuation">;</span>      <span class="token comment"># 取消注释并自行修改成你自己的域名</span>
  server_tokens off<span class="token punctuation">;</span>
  ssl_certificate cert/jumpserver.transwarp.io.bundle.crt<span class="token punctuation">;</span>        <span class="token comment"># 修改 server.crt 为你的证书, 不要改路径 certs/</span>
  ssl_certificate_key cert/jumpserver.transwarp.io.key.pem<span class="token punctuation">;</span>    <span class="token comment"># 修改 server.key 为你的证书, 不要改路径 certs/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>重启服务，https生效</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token builtin class-name">cd</span> /opt/jumpserver-installer-v2.14.2
./jmsctl.sh restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-2.png" alt=""></p>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://docs.jumpserver.org/zh/master/install/migration/">https://docs.jumpserver.org/zh/master/install/migration/</a></p>
<p>最后，Have a nice day~</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>堡垒机</tag>
        <tag>Jumpserver</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql语法收集</title>
    <url>/2020/07/02/mysql-manual/</url>
    <content><![CDATA[<h5 id="增加主键id并自增"><a href="#增加主键id并自增" class="headerlink" title="增加主键id并自增"></a>增加主键id并自增</h5><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">alter table hwinfo add id int not null primary key Auto_increment  first;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h5 id="调整字段顺序"><a href="#调整字段顺序" class="headerlink" title="调整字段顺序"></a>调整字段顺序</h5><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">ALTER table hwinfo change &#96;test1&#96; &#96;tese1&#96; varchar(100) after &#96;test2&#96;
#将test1字段调整到test2后面<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<span id="more"></span>]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>linux自定义shell欢迎界面</title>
    <url>/2020/07/02/motd/</url>
    <content><![CDATA[<p>1、/etc/issue 本地登陆显示的信息，本地登录前</p>
<p>2、/etc/issue.net 网络登陆显示的信息，登录后显示，需要由sshd配置</p>
<p>3、/etc/motd 常用于通告信息，如计划关机时间的警告等，登陆后的提示信息</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20210411151003662.png" alt=""></p>
<ul>
<li>Text ART&amp;Emoji：<a href="https://fsymbols.com/text-art/">https://fsymbols.com/text-art/</a></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>FTP集成统一身份认证+Quota限额</title>
    <url>/2021/11/13/proftpd-ldap-quota/</url>
    <content><![CDATA[<blockquote>
<h2 id="预期目标"><a href="#预期目标" class="headerlink" title="预期目标"></a>预期目标</h2><ol>
<li>FTP/FTPS协议文件传输</li>
<li>基于AD或LDAP的统一身份认证登录</li>
<li>用户登录自动进入自己的home目录</li>
<li>所有用户可访问指定公共目录（读写）</li>
<li>用户不可访问除以上目录外的所有其他目录（Deny）</li>
<li>用户空间及速率配额（Quota）</li>
<li>镜像和公共目录使用smaba协议实现匿名访问</li>
</ol>
</blockquote>
<h2 id="方案一、Proftpd-LDAP-AD"><a href="#方案一、Proftpd-LDAP-AD" class="headerlink" title="方案一、Proftpd+LDAP/AD"></a>方案一、Proftpd+LDAP/AD</h2><p>安装依赖</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum <span class="token function">install</span> epel-release -y
yum update -y
yum <span class="token function">install</span> proftpd proftpd-ldap<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>准备本地用户和共享目录</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">useradd</span> -s /sbin/nologin proftpd
<span class="token function">mkdir</span> -p /data/ftp/home
<span class="token function">mkdir</span> -p /data/ftp/isos
<span class="token function">mkdir</span> -p /data/ftp/public
<span class="token function">chown</span> -R proftpd:proftpd /data/ftp/home
<span class="token function">chown</span> -R proftpd:proftpd /data/ftp/isos
<span class="token function">chown</span> -R proftpd:proftpd /data/ftp/public
<span class="token function">chmod</span> <span class="token number">750</span> /data/ftp/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>准备Quota配额表和计数表</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#这里需要使用ftpquota工具，进入到源码目录，编译安装后即可获取：</span>
./configure --with-modules<span class="token operator">=</span>mod_quotatab:mod_quotatab_file
<span class="token function">make</span>
<span class="token function">make</span> <span class="token function">install</span>

<span class="token comment">#创建空的配额表和计数表用于后续工作</span>
ftpquota --create-table --type<span class="token operator">=</span>limit --table-path<span class="token operator">=</span>/root/ftpquota.limittab
ftpquota --create-table --type<span class="token operator">=</span>tally --table-path<span class="token operator">=</span>/root/ftpquota.tallytab

<span class="token comment">#如果后续有特殊配额需求，也可使用ftpquota工具对配额表手动增加配额条目</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>proftpd.conf配置如下：</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 保持注释状态，取消注释后将指定ftp根目录，同时home变量会失效</span>
<span class="token comment">#DefaultRoot                    ~</span>

<span class="token comment"># 认证顺序，这里我们只允许ldap认证</span>
AuthOrder                       mod_ldap.c

<span class="token comment"># 指定ftp进程映射在本地的用户（这里的用户必须在系统中真实存在）</span>
User                            proftpd
Group                           proftpd

<span class="token comment">#########################LDAP/AD认证域配置##############################</span>
<span class="token comment">#载入LDAP module</span>
LoadModule mod_ldap.c

<span class="token comment">#配置LDAP/AD服务器地址（不用填写协议前缀）</span>
LDAPServer <span class="token number">172.16</span>.20.11
<span class="token comment">#设置LDAP/AD 管理员DN</span>
LDAPBindDN <span class="token string">"CN=xinchen.luan,OU=Domain Users,DC=transwarp,DC=io"</span> <span class="token string">"******"</span><span class="token punctuation">(</span>这里填写管理密码<span class="token punctuation">)</span>
<span class="token comment">#映射uid到AD中的sAMAccountName字段</span>
LDAPAttr uid <span class="token string">"sAMAccountName"</span>
<span class="token comment">#设置用户BaseDN和filter</span>
LDAPUsers <span class="token string">"OU=Domain Users,DC=transwarp,DC=io"</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>objectClass<span class="token operator">=</span>user<span class="token punctuation">)</span><span class="token punctuation">(</span>sAMAccountName<span class="token operator">=</span>%v<span class="token punctuation">)</span><span class="token punctuation">(</span>mail<span class="token operator">=</span>*<span class="token punctuation">))</span>
<span class="token comment">#开启log，调试认证过程</span>
LDAPLog /var/log/mod_ldap.log
LDAPSearchScope subtree
<span class="token comment">#若LDAP中查询不到UserID和GroupID字段，则默认赋值</span>
LDAPDefaultUID <span class="token number">1000</span>
LDAPDefaultGID <span class="token number">1000</span>
<span class="token comment">#强制给UID和GID赋默认值</span>
LDAPForceDefaultGID on
LDAPForceDefaultUID on
<span class="token comment">#允许在指定目录下生成用户home目录</span>
LDAPGenerateHomedir on
LDAPGenerateHomedirPrefix /data/ftp/home
LDAPForceGeneratedHomedir on
<span class="token comment">#允许在指定目录下生成用户目录，如果设置为on，所有用户共享同一home目录</span>
LDAPGenerateHomedirPrefixNoUsername off
<span class="token comment">#如果用户home目录不存在，则自动创建</span>
CreateHome on
<span class="token comment">#允许用户没有合法 shell也可以登录，因为 LDAP 用户如果没有 posixAccount 扩展，是没有 shell 设置的</span>
RequireValidShell off

<span class="token comment">#############################目录权限配置##############################</span>
<span class="token comment">#下面目录权限配置分为四大块，秉承先Deny后Allow的原则</span>
<span class="token comment">#根目录权限设置</span>
  <span class="token operator">&lt;</span>Directory / <span class="token operator">></span>
    <span class="token operator">&lt;</span>Limit WRITE READ DIRS DELE<span class="token operator">></span> <span class="token comment">#禁止访问</span>
      DenyAll
    <span class="token operator">&lt;</span>/Limit<span class="token operator">></span>
  <span class="token operator">&lt;</span>/Directory<span class="token operator">></span>

<span class="token comment">#允许访问ftp目录</span>
  <span class="token operator">&lt;</span>Directory /data/ftp/ <span class="token operator">></span>
    <span class="token operator">&lt;</span>Limit DELE<span class="token operator">></span> <span class="token comment">#禁止删除文件</span>
      DenyAll
    <span class="token operator">&lt;</span>/Limit<span class="token operator">></span>
    <span class="token operator">&lt;</span>Limit DIRS<span class="token operator">></span> <span class="token comment">#允许查看文件</span>
      AllowAll
    <span class="token operator">&lt;</span>/Limit<span class="token operator">></span>
  <span class="token operator">&lt;</span>/Directory<span class="token operator">></span>

<span class="token comment">#禁止访问其他用户的家目录</span>
  <span class="token operator">&lt;</span>Directory /data/ftp/home/ <span class="token operator">></span>
    <span class="token operator">&lt;</span>Limit DELE DIRS<span class="token operator">></span> <span class="token comment">#禁止删除文件</span>
      DenyAll
    <span class="token operator">&lt;</span>/Limit<span class="token operator">></span>
  <span class="token operator">&lt;</span>/Directory<span class="token operator">></span>

<span class="token comment">#公共目录权限设置</span>
  <span class="token operator">&lt;</span>Directory /data/ftp/public/ <span class="token operator">></span>
    <span class="token operator">&lt;</span>Limit DELE<span class="token operator">></span> <span class="token comment">#禁止删除文件</span>
      DenyAll
    <span class="token operator">&lt;</span>/Limit<span class="token operator">></span>
    <span class="token operator">&lt;</span>Limit WRITE READ DIRS<span class="token operator">></span> <span class="token comment">#允许读写</span>
      AllowAll
    <span class="token operator">&lt;</span>/Limit<span class="token operator">></span>
  <span class="token operator">&lt;</span>/Directory<span class="token operator">></span>

<span class="token comment">#ISO镜像目录权限设置</span>
  <span class="token operator">&lt;</span>Directory /data/ftp/isos/ <span class="token operator">></span>
    <span class="token operator">&lt;</span>Limit DELE<span class="token operator">></span> <span class="token comment">#禁止删除文件</span>
      DenyAll
    <span class="token operator">&lt;</span>/Limit<span class="token operator">></span>
    <span class="token operator">&lt;</span>Limit WRITE READ DIRS<span class="token operator">></span> <span class="token comment">#允许读写</span>
      AllowAll
    <span class="token operator">&lt;</span>/Limit<span class="token operator">></span>
  <span class="token operator">&lt;</span>/Directory<span class="token operator">></span>

<span class="token comment">#用户自己的家目录权限设置</span>
  <span class="token operator">&lt;</span>Directory ~<span class="token operator">></span>
    <span class="token operator">&lt;</span>Limit WRITE READ DIRS DELE<span class="token operator">></span> <span class="token comment">#允许读写删除</span>
      AllowAll
    <span class="token operator">&lt;</span>/Limit<span class="token operator">></span>
  <span class="token operator">&lt;</span>/Directory<span class="token operator">></span>

<span class="token comment">##########################Quota配置##################################</span>
<span class="token comment">#在此之前需要弄清Quota的原理,Quota主要通过配额表和计数表实现</span>
<span class="token comment">#若要为每个用户提供不通的配额方案，需要在LDAP/AD用户信息中添加自定义字段</span>
<span class="token comment">#这里我们没有提供每个用户的自定义配额表，所以使用了本地配额表进行统一配额</span>
LoadModule mod_quotatab.c
LoadModule mod_quotatab_file.c

<span class="token operator">&lt;</span>IfModule mod_quotatab.c<span class="token operator">></span>
        QuotaEngine on
        <span class="token comment">#开启限额调试日志</span>
        QuotaLog /var/log/proftpd/quota.log
        <span class="token comment">#未查询到配额的用户默认使用以下策略，这里默认限制上传空间50G</span>
        <span class="token comment">#配额类型、单次会话限制、限制策略、上传配额、下载配额、传输速率、上传数量、下载数量、传输数量(Byte)</span>
        QuotaDefault user <span class="token boolean">false</span> hard <span class="token number">53687091200</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span>
        QuotaDisplayUnits Mb
        QuotaOptions ScanOnLogin
        QuotaDirectoryTally off
        <span class="token operator">&lt;</span>IfModule mod_quotatab_file.c<span class="token operator">></span>
        <span class="token comment">#分别引入之前生成的本地配额表和计数表</span>
        QuotaLimitTable file:/root/ftpquota.limittab
        QuotaTallyTable file:/root/ftpquota.tallytab
        <span class="token operator">&lt;</span>/IfModule<span class="token operator">></span>
<span class="token operator">&lt;</span>/IfModule<span class="token operator">></span>

<span class="token comment">##############################显式TLS配置################################</span>
<span class="token operator">&lt;</span>IfModule mod_tls.c<span class="token operator">></span>
  TLSEngine                     on
  <span class="token comment">#是否强制请求证书</span>
  TLSRequired                   off
  TLSProtocol                   TLSv1.1 TLSv1.2
  <span class="token comment">#证书路径</span>
  TLSRSACertificateFile         /root/cert/transwarp.io.pem
  TLSRSACertificateKeyFile      /root/cert/transwarp.io.key
  TLSCipherSuite               ALL:<span class="token operator">!</span>ADH:<span class="token operator">!</span>DES
  TLSOptions                    NoCertRequest
  TLSVerifyClient               off
  TLSRenegotiate               ctrl <span class="token number">3600</span> data <span class="token number">512000</span> required off <span class="token function">timeout</span> <span class="token number">300</span>
  TLSLog                        /var/log/proftpd/tls.log
<span class="token operator">&lt;</span>/Ifmodule<span class="token operator">></span>

<span class="token comment">##############################被动模式配置##############################</span>

<span class="token comment">#指定被动模式端口范围</span>
PassivePorts <span class="token number">60022</span> <span class="token number">60023</span>

<span class="token comment">#启用TLS后会默认使用被动模式，未指定MasqueradeAddress的话会导致返回内网IP</span>
<span class="token comment">#这里启用ifsession判断来源IP</span>
LoadModule mod_ifsession.c
  <span class="token operator">&lt;</span>IfModule mod_ifsession.c<span class="token operator">></span>
    <span class="token comment">#定义内网对象</span>
    <span class="token operator">&lt;</span>Class internal<span class="token operator">></span>
      From <span class="token number">172.18</span>.0.0/16
    <span class="token operator">&lt;</span>/Class<span class="token operator">></span>

    <span class="token comment">#来源session为IDC内网，返回FTP内网地址</span>
    <span class="token operator">&lt;</span>IfClass internal<span class="token operator">></span>
      MasqueradeAddress <span class="token number">172.18</span>.31.11
    <span class="token operator">&lt;</span>/IfClass<span class="token operator">></span>

    <span class="token comment">#来源session为公网，返回公网IP地址</span>
    <span class="token operator">&lt;</span>IfClass <span class="token operator">!</span>internal<span class="token operator">></span>
      MasqueradeAddress <span class="token number">103.28</span>.213.234
    <span class="token operator">&lt;</span>/IfClass<span class="token operator">></span>
  <span class="token operator">&lt;</span>/IfModule<span class="token operator">></span>

<span class="token comment">##################################################################</span>
<span class="token comment">#除此之外的其他设置请参考proftpd官方文档进行设置，这里保持默认即可#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>附Samba共享配置：</p>
<pre class="line-numbers language-yml" data-language="yml"><code class="language-yml">[global]
        log file &#x3D; &#x2F;var&#x2F;log&#x2F;samba&#x2F;log.%m
        workgroup &#x3D; SAMBA
        security &#x3D; user
        map to guest &#x3D; bad user #开启匿名访问
        passdb backend &#x3D; tdbsam
        printing &#x3D; cups
        printcap name &#x3D; cups
        load printers &#x3D; yes
        cups options &#x3D; raw
[isos]
comment &#x3D; iso share
path &#x3D; &#x2F;data&#x2F;ftp&#x2F;isos   #isos路径
browsable &#x3D; yes         #读取权限
writable &#x3D; no           #写入权限
guest ok &#x3D; yes          #匿名访问身份为guest
public &#x3D; yes            #允许匿名访问
force user &#x3D; proftpd    #指定ftp用户

[public]
comment &#x3D; public share
path &#x3D; &#x2F;data&#x2F;ftp&#x2F;public #public路径
browsable &#x3D; yes         #读取权限
writable &#x3D; no           #写入权限
guest ok &#x3D; yes          #匿名访问身份为guest
public &#x3D; yes            #允许匿名访问
force user &#x3D; proftpd    #指定ftp用户<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h4><p>所有用户使用统一账户登陆，登录后自动进入用户home目录，此外用户还可访问public和isos两个公共目录，目录路径和权限如下表：</p>
<table>
<thead>
<tr>
<th><strong>目录名称</strong></th>
<th><strong>描述</strong></th>
<th><strong>路径</strong></th>
<th><strong>权限</strong></th>
</tr>
</thead>
<tbody><tr>
<td>home</td>
<td>用户家目录</td>
<td>/data/ftp/home/{username}</td>
<td>完全控制</td>
</tr>
<tr>
<td>public</td>
<td>公共目录</td>
<td>/data/ftp/public</td>
<td>读写</td>
</tr>
<tr>
<td>isos</td>
<td>镜像目录</td>
<td>/data/ftp/isos</td>
<td>只读</td>
</tr>
</tbody></table>
<p>用户连接FTP后使用<code>quote SITE QUOTA</code>命令查看配额空间：<br><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-6.png" alt=""><br>如图，总空间为51200MB，已用38.41MB。</p>
<h2 id="方案二、Vsftp-LDAP"><a href="#方案二、Vsftp-LDAP" class="headerlink" title="方案二、Vsftp+LDAP"></a>方案二、Vsftp+LDAP</h2><p>由于vsftp对于LDAP权限管理较弱，该方案已弃用，仅做参考。</p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#安装依赖</span>
yum <span class="token function">install</span> vsftpd nss-pam-ldapd

<span class="token comment">#配置LDAP</span>
<span class="token comment">#cat /etc/nslcd.conf</span>
uri ldap://172.16.2.17:10389
base <span class="token assign-left variable">ou</span><span class="token operator">=</span>People,dc<span class="token operator">=</span>tdh
binddn <span class="token assign-left variable">uid</span><span class="token operator">=</span>admin,ou<span class="token operator">=</span>People,dc<span class="token operator">=</span>tdh
bindpw ***

<span class="token comment">#cat /etc/vsftpd/vsftpd.conf</span>
<span class="token assign-left variable">anonymous_enable</span><span class="token operator">=</span>NO
<span class="token assign-left variable">local_enable</span><span class="token operator">=</span>YES
<span class="token assign-left variable">write_enable</span><span class="token operator">=</span>YES
<span class="token assign-left variable">local_umask</span><span class="token operator">=</span>022
<span class="token assign-left variable">anon_upload_enable</span><span class="token operator">=</span>YES
<span class="token assign-left variable">anon_mkdir_write_enable</span><span class="token operator">=</span>YES
<span class="token assign-left variable">dirmessage_enable</span><span class="token operator">=</span>YES
<span class="token assign-left variable">xferlog_enable</span><span class="token operator">=</span>YES
<span class="token assign-left variable">connect_from_port_20</span><span class="token operator">=</span>YES
<span class="token assign-left variable">xferlog_std_format</span><span class="token operator">=</span>YES
<span class="token assign-left variable">chroot_local_user</span><span class="token operator">=</span>YES
<span class="token assign-left variable">listen</span><span class="token operator">=</span>YES
<span class="token assign-left variable">listen_ipv6</span><span class="token operator">=</span>NO
<span class="token assign-left variable">pam_service_name</span><span class="token operator">=</span>vsftpd
<span class="token assign-left variable">userlist_enable</span><span class="token operator">=</span>YES
<span class="token assign-left variable">tcp_wrappers</span><span class="token operator">=</span>YES
<span class="token assign-left variable">guest_enable</span><span class="token operator">=</span>YES
<span class="token assign-left variable">guest_username</span><span class="token operator">=</span>ftp
<span class="token assign-left variable">local_root</span><span class="token operator">=</span>/opt/data
<span class="token assign-left variable">allow_writeable_chroot</span><span class="token operator">=</span>YES


<span class="token comment">#systemctl start nslcd</span>
<span class="token comment">#systemctl start vsftpd</span>

<span class="token comment">#至此用户可以使用ldap账号登陆ftp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>最后，Have a nice day~</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>proftpd</tag>
        <tag>文件服务器</tag>
        <tag>LDAP</tag>
      </tags>
  </entry>
  <entry>
    <title>RHCE认证笔记</title>
    <url>/2020/06/19/rhce/</url>
    <content><![CDATA[<h4 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h4><p>RHCE：Red Hat Certified Engineer. RedHat 认证工程师</p>
<p>CentOS：Community Enterprise Operating System. 社区企业操作系统，免费使用</p>
<p>RHEL：Red Hat Enterprise Linux. 红帽企业Linux系统，由RedHat提供服务，付费使用</p>
<span id="more"></span>

<h4 id="RHEL-7-amp-8-命令笔记"><a href="#RHEL-7-amp-8-命令笔记" class="headerlink" title="RHEL 7&amp;8 命令笔记"></a>RHEL 7&amp;8 命令笔记</h4><p>pidof</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 用于查询指定服务进程的PID值</span>
<span class="token punctuation">[</span>root@linuxprobe ~<span class="token punctuation">]</span><span class="token comment"># pidof sshd</span>
<span class="token number">2156</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>killall</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 用于终止指定服务所对应的所有进程</span>
<span class="token punctuation">[</span>root@linuxprobe ~<span class="token punctuation">]</span><span class="token comment"># pidof httpd</span>
<span class="token number">13581</span> <span class="token number">13580</span> <span class="token number">13579</span> <span class="token number">13578</span> <span class="token number">13577</span> <span class="token number">13576</span>
<span class="token punctuation">[</span>root@linuxprobe ~<span class="token punctuation">]</span><span class="token comment"># killall httpd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>uname</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看系统内核</span>
<span class="token punctuation">[</span>root@linuxprobe ~<span class="token punctuation">]</span><span class="token comment"># uname -a</span>
Linux linuxprobe.com <span class="token number">3.10</span>.0-123.el7.x86_64 <span class="token comment">#1 SMP Mon May 5 11:16:57 EDT 2017 x86_64 x86_64 x86_64 GNU/Linux</span>
<span class="token comment"># 同上</span>
<span class="token punctuation">[</span>root@linuxprobe ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/redhat-release</span>
Red Hat Enterprise Linux Server release <span class="token number">7.0</span> <span class="token punctuation">(</span>Maipo<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>uptime</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 显示系统当前时间、已运行时间、终端数量、平均负载等信息</span>
<span class="token punctuation">[</span>root@linuxprobe ~<span class="token punctuation">]</span><span class="token comment"># uptime</span>
<span class="token number">22</span>:49:55 up <span class="token number">10</span> min, <span class="token number">2</span> users, load average: <span class="token number">0.01</span>, <span class="token number">0.19</span>, <span class="token number">0.18</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>sosreport</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 用于收集系统配置及架构信息并输出诊断文档</span>
<span class="token punctuation">[</span>root@linuxprobe ~<span class="token punctuation">]</span><span class="token comment"># sosreport</span>
sosreport <span class="token punctuation">(</span>version <span class="token number">3.0</span><span class="token punctuation">)</span>
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>省略<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.

No changes will be made to system configuration.
Press ENTER to continue, or CTRL-C to quit. 此处敲击回车来确认收集信息

Please enter your first initial and last name <span class="token punctuation">[</span>linuxprobe.com<span class="token punctuation">]</span>:此处敲击回车来确认主机编号
Please enter the <span class="token keyword">case</span> number that you are generating this report for:此处敲击回车来确认主机编号
Running plugins. Please <span class="token function">wait</span> <span class="token punctuation">..</span>.
Running <span class="token number">70</span>/70: yum<span class="token punctuation">..</span>.
Creating compressed archive<span class="token punctuation">..</span>.
Your sosreport has been generated and saved in:

/var/tmp/sosreport-linuxprobe.com-20170905230631.tar.xz
The checksum is: 79436cdf791327040efde48c452c6322
Please send this <span class="token function">file</span> to your support representative.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>file</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 用于查看文件的类型</span>
<span class="token punctuation">[</span>root@linuxprobe ~<span class="token punctuation">]</span><span class="token comment"># file anaconda-ks.cfg </span>
anaconda-ks.cfg: ASCII text
<span class="token punctuation">[</span>root@linuxprobe ~<span class="token punctuation">]</span><span class="token comment"># file /dev/sda</span>
/dev/sda: block special<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>wc</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 用于统计指定文本的行数、字数、字节数</span>
<span class="token punctuation">[</span>root@linuxprobe ~<span class="token punctuation">]</span><span class="token comment"># wc -l /etc/passwd</span>
<span class="token number">38</span> /etc/passwd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>cut</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 用于按列提取文本字符，通常配合head和grep使用</span>
<span class="token punctuation">[</span>root@linuxprobe ~<span class="token punctuation">]</span><span class="token comment"># cut -d: -f1 /etc/passwd</span>
root
bin
daemon<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>重定向 </p>
<table>
<thead>
<tr>
<th>符号</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>命令 &gt; 文件</td>
<td>将标准输出重定向到一个文件中（清空原有文件的数据）</td>
</tr>
<tr>
<td>命令 &lt; 文件</td>
<td>将文件作为命令的标准输入</td>
</tr>
<tr>
<td>命令 2&gt; 文件</td>
<td>将错误输出重定向到一个文件中（清空原有文件的数据）</td>
</tr>
<tr>
<td>命令 &gt;&gt; 文件</td>
<td>将标准输出重定向到一个文件中（追加到原有内容的后面）</td>
</tr>
<tr>
<td>命令 &lt;&lt; 分界符</td>
<td>从标准输入中读入，直到遇见分界符才停止</td>
</tr>
<tr>
<td>命令 2&gt;&gt; 文件</td>
<td>将错误输出重定向到一个文件中（追加到原有内容的后面）</td>
</tr>
<tr>
<td>命令 &gt;&gt; 文件 2&gt;&amp;1 或 命令 &amp;&gt;&gt; 文件</td>
<td>将标准输出与错误输出共同写入到文件中（追加到原有内容的后面）</td>
</tr>
</tbody></table>
<h4 id="Vim快捷键"><a href="#Vim快捷键" class="headerlink" title="Vim快捷键"></a>Vim快捷键</h4>]]></content>
      <categories>
        <category>linux</category>
        <category>RHEL</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>RHEL</tag>
      </tags>
  </entry>
  <entry>
    <title>SNMP_Exporter增加自定义metrics</title>
    <url>/2021/01/18/snmp-custom-metrics/</url>
    <content><![CDATA[<h2 id="一、前提条件"><a href="#一、前提条件" class="headerlink" title="一、前提条件"></a>一、前提条件</h2><ul>
<li>目标SNMP设备开启SNMP并配置读写组权限</li>
<li>snmptranslate、snmpwalk客户端（用于调试）</li>
<li>snmp_exporter的generator环境</li>
<li>目标SNMP设备的对应mib文件</li>
</ul>
<h3 id="generator环境"><a href="#generator环境" class="headerlink" title="generator环境"></a>generator环境</h3><p><a href="https://github.com/prometheus/snmp_exporter/tree/master/generator">https://github.com/prometheus/snmp_exporter/tree/master/generator</a></p>
<p>clone到本地后使用go编译为可执行文件</p>
<h3 id="snmptranslate、snmpwalk"><a href="#snmptranslate、snmpwalk" class="headerlink" title="snmptranslate、snmpwalk"></a>snmptranslate、snmpwalk</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">yum <span class="token function">install</span> net-snmp net-snmp-utils net-snmp-libs net-snmp-devel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="二、步骤"><a href="#二、步骤" class="headerlink" title="二、步骤"></a>二、步骤</h2><ol>
<li>开启SNMP功能并配置加密算法、读写组等（这里以华为TS200服务器举例）</li>
</ol>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-7.png" alt=""></p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-8.png" alt=""></p>
<ol start="2">
<li>将下载的对应snmp设备型号的mib文件，上传到generator环境</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-webpy-master generator<span class="token punctuation">]</span><span class="token comment"># ll mibs/huawei/</span>
total <span class="token number">748</span>
-rw-r--r-- <span class="token number">1</span> root root <span class="token number">761950</span> Jan <span class="token number">18</span> <span class="token number">14</span>:51 HUAWEI-SERVER-iBMC-MIB.mib<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>使用snmptranslate检索需要抓取的metrics OID，这里以温度监控为例</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-webpy-master generator<span class="token punctuation">]</span><span class="token comment"># snmptranslate -Tz -m mibs/huawei/HUAWEI-SERVER-iBMC-MIB.mib |grep -i temperatureReading</span>
<span class="token string">"temperatureReading"</span>                    <span class="token string">"1.3.6.1.4.1.2011.2.235.1.1.26.50.1.3"</span>
<span class="token comment">#温度读数OID为1.3.6.1.4.1.2011.2.235.1.1.26.50.1.3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>使用snmpbulkwalk获取指定OID的snmp取值，校验与实际值是否吻合</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-webpy-master generator<span class="token punctuation">]</span><span class="token comment"># snmpbulkwalk -v3 -l authPriv -u "Administrator" -a SHA -A "Admin@9999" -x AES -X "Admin@9999" 172.26.3.134 1.3.6.1.4.1.2011.2.235.1.1.26.50.1.3</span>
SNMPv2-SMI::enterprises.2011.2.235.1.1.26.50.1.3.1 <span class="token operator">=</span> INTEGER: <span class="token number">240</span>
SNMPv2-SMI::enterprises.2011.2.235.1.1.26.50.1.3.2 <span class="token operator">=</span> INTEGER: <span class="token number">450</span>
SNMPv2-SMI::enterprises.2011.2.235.1.1.26.50.1.3.3 <span class="token operator">=</span> INTEGER: <span class="token number">520</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>​    通过Object读数得知，上面获取到的三个值分别为进风温度、CPU1温度、CPU2温度，下面校验一下与BMC获取的温度是否一致（这里需要注意：snmp取值/10=实际值）</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-9.png" alt=""></p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-10.png" alt=""></p>
<p>​    经校验，snmp取值与实际温度值一致，该OID可用。</p>
<ol start="5">
<li>编辑generator.yml文件</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-webpy-master generator<span class="token punctuation">]</span><span class="token comment"># cat generator.yml</span>
modules:
  huawei:
    walk:
    - <span class="token number">1.3</span>.6.1.4.1.2011.2.235.1.1.26.50.1.3
    version: <span class="token number">3</span>
    timeout: 30s
    auth:
      community: public
      security_level: authPriv
      username: <span class="token string">"Administrator"</span>
      password: <span class="token string">"Admin@9999"</span>
      auth_protocol: SHA
      priv_protocol: AES
      priv_password: <span class="token string">"Admin@9999"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="6">
<li>使用generator生成snmp_exporter配置文件</li>
</ol>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token punctuation">[</span>root@it-webpy-master generator<span class="token punctuation">]</span><span class="token comment"># export MIBDIRS=/root/snmp_exporter-master/generator/mibs</span>
<span class="token punctuation">[</span>root@it-webpy-master generator<span class="token punctuation">]</span><span class="token comment"># cp mibs/huawei/HUAWEI-SERVER-iBMC-MIB.mib mibs/</span>
<span class="token punctuation">[</span>root@it-webpy-master generator<span class="token punctuation">]</span><span class="token comment"># ./generator generate</span>
<span class="token assign-left variable">level</span><span class="token operator">=</span>info <span class="token assign-left variable">ts</span><span class="token operator">=</span><span class="token number">2021</span>-01-18T07:38:37.110Z <span class="token assign-left variable">caller</span><span class="token operator">=</span>net_snmp.go:142 <span class="token assign-left variable">msg</span><span class="token operator">=</span><span class="token string">"Loading MIBs"</span> <span class="token assign-left variable">from</span><span class="token operator">=</span>/root/snmp_exporter-master/generator/mibs
<span class="token assign-left variable">level</span><span class="token operator">=</span>info <span class="token assign-left variable">ts</span><span class="token operator">=</span><span class="token number">2021</span>-01-18T07:38:37.368Z <span class="token assign-left variable">caller</span><span class="token operator">=</span>main.go:52 <span class="token assign-left variable">msg</span><span class="token operator">=</span><span class="token string">"Generating config for module"</span> <span class="token assign-left variable">module</span><span class="token operator">=</span>huawei
<span class="token assign-left variable">level</span><span class="token operator">=</span>info <span class="token assign-left variable">ts</span><span class="token operator">=</span><span class="token number">2021</span>-01-18T07:38:37.392Z <span class="token assign-left variable">caller</span><span class="token operator">=</span>main.go:67 <span class="token assign-left variable">msg</span><span class="token operator">=</span><span class="token string">"Generated metrics"</span> <span class="token assign-left variable">module</span><span class="token operator">=</span>huawei <span class="token assign-left variable">metrics</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">level</span><span class="token operator">=</span>info <span class="token assign-left variable">ts</span><span class="token operator">=</span><span class="token number">2021</span>-01-18T07:38:37.392Z <span class="token assign-left variable">caller</span><span class="token operator">=</span>main.go:92 <span class="token assign-left variable">msg</span><span class="token operator">=</span><span class="token string">"Config written"</span> <span class="token assign-left variable">file</span><span class="token operator">=</span>/root/snmp_exporter-master/generator/snmp.yml
<span class="token punctuation">[</span>root@it-webpy-master generator<span class="token punctuation">]</span><span class="token comment"># cat snmp.yml</span>
<span class="token comment"># WARNING: This file was auto-generated using snmp_exporter generator, manual changes will be lost.</span>
huawei:
  walk:
  - <span class="token number">1.3</span>.6.1.4.1.2011.2.235.1.1.26.50.1.3
  metrics:
  - name: temperatureReading
    oid: <span class="token number">1.3</span>.6.1.4.1.2011.2.235.1.1.26.50.1.3
    type: gauge
    help: Information about temperature reading,the unit is <span class="token number">1</span>/10 Celsius degree -
      <span class="token number">1.3</span>.6.1.4.1.2011.2.235.1.1.26.50.1.3
    indexes:
    - labelname: temperatureIndex
      type: gauge
  version: <span class="token number">3</span>
  timeout: 30s
  auth:
    community: public
    security_level: authPriv
    username: Administrator
    password: Admin@9999
    auth_protocol: SHA
    priv_protocol: AES
    priv_password: Admin@9999<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="7">
<li>把生成的配置复制到snmp_exporter.yml中，重启snmp_exporter生效，测试读数是否正确</li>
</ol>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-11.png" alt="img"></p>
<ol start="8">
<li>成功获取snmp读数，metrics添加完成。</li>
</ol>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-12.png" alt="img"></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>监控</tag>
        <tag>Prometheus</tag>
        <tag>SNMP</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Storcli定位RAID组盘符/dev/sd*对应物理磁盘</title>
    <url>/2021/02/28/storcli-locate-disks/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>研发组里有个裸金属集群需要升级磁盘，要求不能停机，而且只能给到mount的盘符信息，应该如何快速准确的定位到物理磁盘呢？当然是求助万能的Storcli啦！</p>
<span id="more"></span>

<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h4 id="1-获取Target-ID"><a href="#1-获取Target-ID" class="headerlink" title="1. 获取Target ID"></a>1. 获取Target ID</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># ll /sys/block</span>
total <span class="token number">0</span>
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">3</span> <span class="token number">19</span>:19 dm-0 -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/virtual/block/dm-0
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">3</span> <span class="token number">19</span>:19 dm-1 -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/virtual/block/dm-1
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">3</span> <span class="token number">19</span>:19 dm-2 -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/virtual/block/dm-2
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">3</span> <span class="token number">19</span>:19 sda -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/pci0000:00/0000:00:11.5/ata4/host4/target4:0:0/4:0:0:0/block/sda
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">4</span> <span class="token number">12</span>:23 sdb -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/pci0000:17/0000:17:02.0/0000:1c:00.0/host0/target0:2:0/0:2:0:0/block/sdb
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">4</span> <span class="token number">10</span>:10 sdd -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/pci0000:17/0000:17:02.0/0000:1c:00.0/host0/target0:0:35/0:0:35:0/block/sdd
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">4</span> <span class="token number">10</span>:10 sdf -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/pci0000:17/0000:17:02.0/0000:1c:00.0/host0/target0:0:38/0:0:38:0/block/sdf
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">4</span> <span class="token number">10</span>:10 sdg -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/pci0000:17/0000:17:02.0/0000:1c:00.0/host0/target0:0:39/0:0:39:0/block/sdg
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">4</span> <span class="token number">10</span>:10 sdi -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/pci0000:17/0000:17:02.0/0000:1c:00.0/host0/target0:0:42/0:0:42:0/block/sdi
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">4</span> <span class="token number">10</span>:10 sdj -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/pci0000:17/0000:17:02.0/0000:1c:00.0/host0/target0:0:43/0:0:43:0/block/sdj
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">4</span> <span class="token number">10</span>:10 sdk -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/pci0000:17/0000:17:02.0/0000:1c:00.0/host0/target0:0:44/0:0:44:0/block/sdk
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">4</span> <span class="token number">10</span>:10 sdl -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/pci0000:17/0000:17:02.0/0000:1c:00.0/host0/target0:0:45/0:0:45:0/block/sdl
lrwxrwxrwx. <span class="token number">1</span> root root <span class="token number">0</span> Jan  <span class="token number">4</span> <span class="token number">10</span>:10 sdm -<span class="token operator">></span> <span class="token punctuation">..</span>/devices/pci0000:17/0000:17:02.0/0000:1c:00.0/host0/target0:0:46/0:0:46:0/block/sdm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>其中打印信息中<strong>targetx:y:z/</strong>中的<strong>z</strong>即为target ID</p>
<p>例如我们要定位/dev/sdb盘符，则得出该盘符(target0:2:0)的targetID为0</p>
<h4 id="2-通过target-ID定位物理插槽"><a href="#2-通过target-ID定位物理插槽" class="headerlink" title="2.通过target ID定位物理插槽"></a>2.通过target ID定位物理插槽</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">storcli64 /call show alilog <span class="token operator">></span> /home/target.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>在target.txt文件中逻辑磁盘区块查找Target ID，在对应targetID下方的磁盘组查找Devices IDs，Devices IDs代表由哪些物理磁盘组成了逻辑磁盘</p>
<p>再根据Devices IDs在物理磁盘区块查找，即可定位到Slot Number</p>
<p>再搜索Enclosure ID，确认RAID卡EnclosureID号</p>
<h4 id="3-点亮硬盘定位灯："><a href="#3-点亮硬盘定位灯：" class="headerlink" title="3.点亮硬盘定位灯："></a>3.点亮硬盘定位灯：</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">storcli64 /c0/e29/s0 start <span class="token function">locate</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>c0表示RAID卡ID</p>
<p>e29表示Enclosure ID</p>
<p>s0表示slot ID</p>
<p>参考：<a href="https://support.huawei.com/enterprise/zh/doc/EDOC1000041337/75f2d44b">https://support.huawei.com/enterprise/zh/doc/EDOC1000041337/75f2d44b</a></p>
<h4 id="4-更换硬盘后的RAID卡操作"><a href="#4-更换硬盘后的RAID卡操作" class="headerlink" title="4.更换硬盘后的RAID卡操作"></a>4.更换硬盘后的RAID卡操作</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># 查看当前RAID卡状态</span>
storcli64 /c0 show
<span class="token comment"># 创建单盘RAID0</span>
storcli64 /c0 <span class="token function">add</span> vd r0 <span class="token assign-left variable">drives</span><span class="token operator">=</span><span class="token number">252</span>:5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>参考：<a href="https://www.cnblogs.com/zhangxinglong/p/9771967.html">https://www.cnblogs.com/zhangxinglong/p/9771967.html</a></p>
]]></content>
      <categories>
        <category>Server</category>
      </categories>
      <tags>
        <tag>Server</tag>
        <tag>Hardware</tag>
        <tag>Disk</tag>
      </tags>
  </entry>
  <entry>
    <title>Squid+AD认证代理配置</title>
    <url>/2021/12/25/squid-proxy/</url>
    <content><![CDATA[<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a><strong>需求</strong></h3><ul>
<li>支持HTTP、HTTPS多协议代理</li>
<li>支持LDAP/AD认证允许代理</li>
<li>支持Group组权限划分</li>
<li>支持PAC或自定义ACL</li>
</ul>
<h3 id="一、Squid组权限代理方案"><a href="#一、Squid组权限代理方案" class="headerlink" title="一、Squid组权限代理方案"></a><strong>一、Squid组权限代理方案</strong></h3><ol>
<li>Squid服务器使用ppp拨号至翻墙环境并调整路由，使外网环境全局翻墙</li>
<li>Squid配置LDAP/AD认证，定义默认用户组为Employee</li>
<li>Squid额外配置组认证策略，定义该用户组为VIP</li>
<li>为Employee组设置白名单，仅允许部分网站通过代理</li>
<li>为VIP组配置黑名单，除黑名单外网站均可通过代理</li>
</ol>
<h4 id="拓扑示意"><a href="#拓扑示意" class="headerlink" title="拓扑示意"></a><strong>拓扑示意</strong></h4><p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-20.png" alt="img"></p>
<h4 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a><strong>配置步骤</strong></h4><p><strong>PPTP VPN配置</strong></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#1.安装pptp组件</span>
yum <span class="token function">install</span> <span class="token function">wget</span> ppp pptp pptp-setup -y

<span class="token comment">#2.关闭防火墙</span>
systemctl stop firewalld <span class="token operator">&amp;&amp;</span> systemctl disable firewalld

<span class="token comment">#3.设置外网DNS（推荐8.8.8.8）</span>
<span class="token function">cat</span> /etc/resolv.conf
nameserver <span class="token number">8.8</span>.8.8
nameserver <span class="token number">114.114</span>.114.114

<span class="token comment">#4.配置VPN全局路由(注意添加本地路由,否则VPN连接后会导致节点失联)</span>
<span class="token function">vim</span> /etc/ppp/ip-up

<span class="token comment">#在exit0前面添加以下内容</span>
<span class="token function">ip</span> route delete default
route <span class="token function">add</span> -net <span class="token number">172.16</span>.0.0/16 gw <span class="token punctuation">&#123;</span>gateway ipaddress<span class="token punctuation">&#125;</span>
route <span class="token function">add</span> -net <span class="token number">172.26</span>.0.0/16 gw <span class="token punctuation">&#123;</span>gateway ipaddress<span class="token punctuation">&#125;</span>
<span class="token function">ip</span> route <span class="token function">add</span> default dev ppp0

<span class="token comment">#5.创建VPN连接，执行后会自动连接</span>
pptpsetup --create vpn --server <span class="token number">172.16</span>.0.254 --username squid --password ******* --encrypt --start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>创建黑、白名单</strong></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#示例</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/squid/blacklist</span>
.transwarp.io
.transwarp.cn
.baidu.com
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/squid/whitelist</span>
.google.com
.github.com
.github.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>Squid代理配置</strong></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#1.安装squid组件</span>
yum <span class="token function">install</span> squid -y

<span class="token comment">#2.修改squid配置</span>
<span class="token function">vim</span> /etc/squid/squid.conf

<span class="token comment">#首先拒绝所有非来自公司内网的连接</span>
acl localnet src <span class="token number">172.16</span>.0.0/16  <span class="token comment"># RFC1918 possible internal network</span>
acl localnet src <span class="token number">172.26</span>.0.0/16  <span class="token comment"># RFC1918 possible internal network</span>
http_access deny <span class="token operator">!</span>localnet
<span class="token comment">#############################LDAP认证设置#############################</span>
<span class="token comment">#LDAP认证设置，注意修改合适的过滤器以避免结果超限问题</span>
auth_param basic program /usr/lib64/squid/basic_ldap_auth -R -b <span class="token string">"OU=Domain Users,DC=transwarp,DC=io"</span> -D <span class="token string">"CN=xinchen.luan,OU=Domain Users,DC=transwarp,DC=io"</span> -w <span class="token string">"*********"</span>  -h <span class="token number">172.16</span>.20.11 -f <span class="token string">"(&amp;(objectClass=user)(sAMAccountName=%s)(mail=*))"</span>
<span class="token comment">#最大认证进程数</span>
auth_param basic children <span class="token number">50</span>
<span class="token comment">#认证提示</span>
auth_param basic realm Transwarp Proxy Server
<span class="token comment">#单次认证有效期</span>
auth_param basic credentialsttl <span class="token number">2</span> hours
<span class="token comment">#是否指定用户名大小写</span>
auth_param basic casesensitive off
<span class="token comment">##########################LDAP用户组权限设置################################</span>
<span class="token comment">#定义一个扩展acl类，命名为ldapgroup，认证类型为ldap_group_acl</span>
external_acl_type ldapgroup %LOGIN /usr/lib64/squid/ext_ldap_group_acl -d -R -b <span class="token string">"DC=transwarp,DC=io"</span> -D xinchen.luan@transwarp.io -w <span class="token string">"**************"</span>  -h <span class="token number">172.16</span>.20.11 -f <span class="token string">"(&amp;(objectClass=user)(sAMAccountName=%u)(memberOf=CN=%g,OU=Domain Groups,DC=transwarp,DC=io))"</span>
<span class="token comment">#认证过程DEBUG，默认注释，调试时开启</span>
<span class="token comment">#debug_options ALL,1 29,9 33,9</span>
<span class="token comment">##############################ACL定义#######################################</span>
acl CONNECT method CONNECT
<span class="token comment">#使用扩展类ldapgroup定义vip组，设置AD用户组名</span>
acl vip-group external ldapgroup HQ_OM_G_AccountOperators
<span class="token comment">#定义员工用户组，要求使用AD认证</span>
acl employee proxy_auth REQUIRED
<span class="token comment">#定义黑白名单</span>
acl blacklist dstdomain <span class="token string">"/etc/squid/blacklist"</span>
acl whitelist dstdomain <span class="token string">"/etc/squid/whitelist"</span>
<span class="token comment">##############################访问权限控制################################</span>
<span class="token comment">#禁止VIP访问黑名单，除黑名单外全部允许</span>
http_access deny vip-group blacklist
http_access allow vip-group
<span class="token comment">#允许员工访问白名单，除白名单外全部拒绝</span>
http_access allow employee whitelist
http_access deny all

<span class="token comment">#其他配置选项保持默认，保存文件</span>

<span class="token comment">#3.启动服务，测试连接效果</span>
systemctl start squid
systemctl <span class="token builtin class-name">enable</span> squid

<span class="token comment">#快速重载配置命令</span>
squid -kr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>VPN Watchdog配置</strong></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment"># cat /etc/squid/watchdog.sh</span>
<span class="token comment">#!/bin/bash</span>
<span class="token keyword">while</span>  <span class="token boolean">true</span>
<span class="token keyword">do</span>
  <span class="token function">wget</span> -T <span class="token number">10</span> google.com -O /tmp/google <span class="token operator">&amp;></span> /dev/null
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span>
  <span class="token keyword">then</span>
    <span class="token function">sleep</span> <span class="token number">5</span>
    <span class="token function">wget</span> -T <span class="token number">10</span> google.com -O /tmp/google <span class="token operator">&amp;></span> /dev/null
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span>
    <span class="token keyword">then</span>
      <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span><span class="token variable">)</span></span> vpn seems down, restart it"</span> <span class="token operator">>></span> /var/log/watchdog.log
      /usr/bin/pkill pptp
      /usr/sbin/pppd call vpn
    <span class="token keyword">fi</span>
  <span class="token keyword">fi</span>
  <span class="token function">sleep</span> <span class="token number">30</span>
<span class="token keyword">done</span>

<span class="token comment"># cat /etc/squid/vpn_watchdog.service</span>
<span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>VPN_Watchdog

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>simple
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/etc/squid/watchdog.sh
<span class="token assign-left variable">KillMode</span><span class="token operator">=</span>process
<span class="token assign-left variable">Restart</span><span class="token operator">=</span>on-failure
<span class="token assign-left variable">RestartSec</span><span class="token operator">=</span>5s

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target

<span class="token comment">#启动服务前需要关闭selinux和firewalld，否则VPN拨号会报Permission Denied</span>
<span class="token function">ln</span> -s /etc/squid/vpn_watchdog.service /usr/lib/systemd/system/
systemctl daemon-reload <span class="token operator">&amp;&amp;</span> systemctl start vpn_watchdog <span class="token operator">&amp;&amp;</span> systemctl <span class="token builtin class-name">enable</span> vpn_watchdog <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="二、Squid多级代理方案（已弃用）"><a href="#二、Squid多级代理方案（已弃用）" class="headerlink" title="二、Squid多级代理方案（已弃用）"></a><strong>二、Squid多级代理方案（已弃用）</strong></h3><p><strong>该方案结构设计比较复杂，且用户体验不佳，已弃用，仅做记录</strong></p>
<ol>
<li>父级代理首先使用ppp拨号至翻墙环境并调整路由，使外网环境全局翻墙</li>
<li>开启父级代理的AD认证，仅允许部分账户或组可以认证使用全局代理</li>
<li>设置父级代理的可信来源网段/IP，仅允许子级代理或指定IP可使用代理</li>
<li>子级代理配置父级代理连接</li>
<li>子级代理开启AD认证，仅认证通过后的账户或组可使用代理</li>
<li>子级代理配置PAC或指定ACL，仅允许部分网站使用父级代理的翻墙代理，不满足ACL条件的默认使用Direct直通模式</li>
</ol>
<h4 id="拓扑示意-1"><a href="#拓扑示意-1" class="headerlink" title="拓扑示意"></a><strong>拓扑示意</strong></h4><p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/image-16.png" alt="img"></p>
<h4 id="一、父级代理"><a href="#一、父级代理" class="headerlink" title="一、父级代理"></a><strong>一、父级代理</strong></h4><p><strong>PPTP VPN配置</strong></p>
<p>参考方案一</p>
<p><strong>Squid配置</strong></p>
<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#1.安装squid组件</span>
yum <span class="token function">install</span> squid -y

<span class="token comment">#2.修改squid配置</span>
<span class="token function">vim</span> /etc/squid/squid.conf
<span class="token comment">#############################LDAP认证设置#############################</span>
<span class="token comment">#LDAP认证设置，注意修改合适的过滤器以避免结果超限问题</span>
auth_param basic program /usr/lib64/squid/basic_ldap_auth -R -b <span class="token string">"OU=Domain Users,DC=transwarp,DC=io"</span> -D <span class="token string">"CN=xinchen.luan,OU=Domain Users,DC=transwarp,DC=io"</span> -w <span class="token string">"*********"</span>  -h <span class="token number">172.16</span>.20.11 -f <span class="token string">"(&amp;(objectClass=user)(sAMAccountName=%s)(mail=*))"</span>
<span class="token comment">#最大认证进程数</span>
auth_param basic children <span class="token number">50</span>
<span class="token comment">#认证提示</span>
auth_param basic realm Transwarp Proxy Server
<span class="token comment">#单次认证有效期</span>
auth_param basic credentialsttl <span class="token number">2</span> hours
<span class="token comment">#是否指定用户名大小写</span>
auth_param basic casesensitive off
<span class="token comment">############################访问权限设置#################################</span>
<span class="token comment">#允许公司内网访问</span>
acl localnet src <span class="token number">172.16</span>.0.0/16
acl localnet src <span class="token number">172.26</span>.0.0/16 
http_access deny <span class="token operator">!</span>localnet
<span class="token comment">#允许子级代理访问（这里是让子级代理服务器跳过认证）</span>
acl child src <span class="token number">172.16</span>.30.177/32
http_access allow child
<span class="token comment">#仅允许认证用户访问</span>
acl aduser proxy_auth REQUIRED
http_access allow aduser
<span class="token comment">#拒绝其他所有连接</span>
http_access deny all
<span class="token comment">#开启auth过程debug,默认注释</span>
<span class="token comment">#debug_options ALL,1 29,9 33,9</span>
<span class="token comment">###########################其他配置保持默认即可############################</span>

<span class="token comment">#3.启动服务，测试连接效果</span>
systemctl <span class="token builtin class-name">enable</span> squid
systemctl start squid
<span class="token comment">#快速重载配置命令</span>
squid -kr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="二、子级代理"><a href="#二、子级代理" class="headerlink" title="二、子级代理"></a><strong>二、子级代理</strong></h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#1.安装squid组件</span>
yum <span class="token function">install</span> squid -y

<span class="token comment">#2.修改squid配置</span>
<span class="token function">vim</span> /etc/squid/squid.conf
<span class="token comment">#############################LDAP认证设置#############################</span>
<span class="token comment">#LDAP认证设置，注意修改合适的过滤器以避免结果超限问题</span>
auth_param basic program /usr/lib64/squid/basic_ldap_auth -R -b <span class="token string">"OU=Domain Users,DC=transwarp,DC=io"</span> -D <span class="token string">"CN=xinchen.luan,OU=Domain Users,DC=transwarp,DC=io"</span> -w <span class="token string">"*********"</span>  -h <span class="token number">172.16</span>.20.11 -f <span class="token string">"(&amp;(objectClass=user)(sAMAccountName=%s)(mail=*))"</span>
<span class="token comment">#最大认证进程数</span>
auth_param basic children <span class="token number">50</span>
<span class="token comment">#认证提示</span>
auth_param basic realm Transwarp Proxy Server
<span class="token comment">#单次认证有效期</span>
auth_param basic credentialsttl <span class="token number">2</span> hours
<span class="token comment">#是否指定用户名大小写</span>
auth_param basic casesensitive off
<span class="token comment">##############################ACL定义##################################</span>
acl free-internet dstdomain .google.com .gstatic.com
acl free-internet dstdomain .facebook.com .fbcdn.net
acl free-internet dstdomain .youtube.com
<span class="token comment">#禁止访问白名单以外的网站</span>
http_access deny <span class="token operator">!</span>free-internet
<span class="token comment">#############################父级代理配置##############################</span>
cache_peer <span class="token number">172.16</span>.30.165 parent <span class="token number">3128</span> <span class="token number">0</span> no-query default
<span class="token comment">#acl网站使用父级代理</span>
never_direct allow free-internet
never_direct deny all
<span class="token comment">############################访问权限设置###############################</span>
<span class="token comment">#允许公司内网访问</span>
acl localnet src <span class="token number">172.16</span>.0.0/16
acl localnet src <span class="token number">172.26</span>.0.0/16 
http_access deny <span class="token operator">!</span>localnet
<span class="token comment">#仅允许认证用户访问</span>
acl aduser proxy_auth REQUIRED
http_access allow aduser
<span class="token comment">#拒绝其他所有连接</span>
http_access deny all
<span class="token comment">#开启auth过程debug,默认注释</span>
<span class="token comment">#debug_options ALL,1 29,9 33,9</span>
<span class="token comment">###########################其他配置保持默认即可############################</span>

<span class="token comment">#3.启动服务，测试连接效果</span>
systemctl <span class="token builtin class-name">enable</span> squid
systemctl start squid
<span class="token comment">#快速重载配置命令</span>
squid -kr<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="三、其他"><a href="#三、其他" class="headerlink" title="三、其他"></a><strong>三、其他</strong></h3><ul>
<li><p><strong>自定义错误页logo</strong><br><code>/usr/share/squid/icons/SN.png</code></p>
</li>
<li><p><strong>自定义错误页内容</strong><br><code>/usr/share/squid/errors/zh-cn/</code></p>
</li>
</ul>
<p>注意：错误页只对http请求有效，https请求会返回浏览器默认错误页<br>具体参考：<a href="https://wiki.squid-cache.org/Features/CustomErrors#Custom_error_pages_not_displayed_for_HTTPS">https://wiki.squid-cache.org/Features/CustomErrors#Custom_error_pages_not_displayed_for_HTTPS</a></p>
<h3 id="四、PAC自动发布服务"><a href="#四、PAC自动发布服务" class="headerlink" title="四、PAC自动发布服务"></a><strong>四、PAC自动发布服务</strong></h3><p>基于web.py实现PAC文件发布，且白名单文件更新时PAC会随之更新，无需重启服务</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> web

urls <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">'index'</span><span class="token punctuation">,</span>
    <span class="token string">'/transwarp.pac'</span><span class="token punctuation">,</span> <span class="token string">'pac'</span><span class="token punctuation">,</span>
    <span class="token string">'/blacklist'</span><span class="token punctuation">,</span> <span class="token string">'blacklist'</span><span class="token punctuation">,</span>
    <span class="token string">'/whitelist'</span><span class="token punctuation">,</span> <span class="token string">'whitelist'</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token comment">#PAC头部内容</span>
head <span class="token operator">=</span> <span class="token triple-quoted-string string">'''var FindProxyForURL = function(init, profiles) &#123;
    return function(url, host) &#123;
        "use strict";
        var result = init, scheme = url.substr(0, url.indexOf(":"));
        do &#123;
            result = profiles[result];
            if (typeof result === "function") result = result(url, host, scheme);
        &#125; while (typeof result !== "string" || result.charCodeAt(0) === 43);
        return result;
    &#125;;
&#125;("+auto switch", &#123;
    "+auto switch": function(url, host, scheme) &#123;
        "use strict";
'''</span>
<span class="token comment">#PAC尾部内容</span>
foot <span class="token operator">=</span> <span class="token triple-quoted-string string">'''
        return "+__ruleListOf_auto switch";
    &#125;,
    "+__ruleListOf_auto switch": "DIRECT",
    "+Squid": function(url, host, scheme) &#123;
        "use strict";
        if (/^127\.0\.0\.1$/.test(host) || /^::1$/.test(host) || /^localhost$/.test(host)) return "DIRECT";
        return "PROXY proxy.transwarp.io:3128";
    &#125;
&#125;);'''</span>

<span class="token keyword">class</span> <span class="token class-name">index</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">GET</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">"Transwarp Proxy Server \nContact: it-service@transwarp.io"</span>

<span class="token keyword">class</span> <span class="token class-name">pac</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">GET</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">#新建一个空list用于存放pac条目</span>
        <span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token comment">#获取白名单网站</span>
        <span class="token keyword">for</span> line <span class="token keyword">in</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/etc/squid/whitelist'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            site <span class="token operator">=</span> line<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span><span class="token string">"\."</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>
            <span class="token comment">#拼接pac语法</span>
            content <span class="token operator">=</span> <span class="token string">"        if (/(?:^|\.)"</span><span class="token operator">+</span>site<span class="token operator">+</span><span class="token string">"$/.test(host)) return \"+Squid\";"</span>
            <span class="token builtin">list</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>content<span class="token punctuation">)</span>
        <span class="token comment">#添加换行，拼接头部和尾部内容，返回完整pac文件</span>
        pac <span class="token operator">=</span> <span class="token string">"\n"</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
        data <span class="token operator">=</span> head <span class="token operator">+</span> pac <span class="token operator">+</span> foot
        <span class="token keyword">return</span> data

<span class="token comment">#黑名单列表</span>
<span class="token keyword">class</span> <span class="token class-name">blacklist</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">GET</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        f<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/etc/squid/blacklist'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span>
        data<span class="token operator">=</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> data

<span class="token comment">#白名单列表</span>
<span class="token keyword">class</span> <span class="token class-name">whitelist</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">GET</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        f<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/etc/squid/whitelist'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span>
        data<span class="token operator">=</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> data

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> web<span class="token punctuation">.</span>application<span class="token punctuation">(</span>urls<span class="token punctuation">,</span> <span class="token builtin">globals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>最后，Have a nice day~</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Proxy</tag>
        <tag>运维</tag>
        <tag>LDAP</tag>
        <tag>Squid</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus从入门到精通（伪）</title>
    <url>/2020/05/28/prometheus/</url>
    <content><![CDATA[<h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><h3 id="1-1-为什么要监控"><a href="#1-1-为什么要监控" class="headerlink" title="1.1 为什么要监控"></a>1.1 为什么要监控</h3><ul>
<li>监控可以及时有效的告知我们：服务发生了事件、服务器出现了故障、环境出现了异常</li>
<li>出现问题后，利用监控数据追踪溯源，可以更高效的解决问题</li>
<li>利用监控提高网站/服务的可用性</li>
</ul>
<h4 id="1-1-1-可用性"><a href="#1-1-1-可用性" class="headerlink" title="1.1.1 可用性"></a>1.1.1 可用性</h4><pre><code>在软件系统的高可靠性（也称为可用性，英文描述为HA，High Available）里有个衡量其可靠性的标准——X个9，这个X是代表数字3~5。
X个9表示在软件系统1年时间的使用过程中，系统正常使用时间与总时间（1年）之比，通过下面的计算来感受下X个9在不同级别的可靠性差异。
    1个9：(1-90%)*365=36.5天，表示该软件系统在连续运行1年时间里最多可能的业务中断时间是36.5天
    2个9：(1-99%)*365=3.65天 ， 表示该软件系统在连续运行1年时间里最多可能的业务中断时间是3.65天
    3个9：(1-99.9%)*365*24=8.76小时，表示该软件系统在连续运行1年时间里最多可能的业务中断时间是8.76小时。
    4个9：(1-99.99%)*365*24=0.876小时=52.6分钟，表示该软件系统在连续运行1年时间里最多可能的业务中断时间是52.6分钟。
    5个9：(1-99.999%)*365*24*60=5.26分钟，表示该软件系统在连续运行1年时间里最多可能的业务中断时间是5.26分钟。
    6个9：(1-99.9999%)*365*24*60*60=31秒， 示该软件系统在连续运行1年时间里最多可能的业务中断时间是31秒</code></pre><h3 id="1-2-监控什么目标"><a href="#1-2-监控什么目标" class="headerlink" title="1.2 监控什么目标"></a>1.2 监控什么目标</h3><table>
<thead>
<tr>
<th>类型</th>
<th>目标</th>
</tr>
</thead>
<tbody><tr>
<td>硬件监控</td>
<td>服务器IPMI、存储设备、SNMP网络设备、打印设备等</td>
</tr>
<tr>
<td>系统监控</td>
<td>CPU、内存、硬盘使用率、硬盘IO、系统负载、进程数等</td>
</tr>
<tr>
<td>服务监控</td>
<td>Mysql、oracle、Redis、Ceph、Hadoop、Apache、Nginx、tomcat、jvm···</td>
</tr>
<tr>
<td>性能监控</td>
<td>网站性能、服务器性能、数据库性能、存储性能</td>
</tr>
<tr>
<td>网络监控</td>
<td>物理端口、Web服务、带宽流量、端口速率、网络使用率、TCP连接数等</td>
</tr>
</tbody></table>
<h3 id="1-3-常见开源监控平台-工具"><a href="#1-3-常见开源监控平台-工具" class="headerlink" title="1.3 常见开源监控平台/工具"></a>1.3 常见开源监控平台/工具</h3><ul>
<li>MRTG 流量监控</li>
<li>Nagios 综合监控</li>
<li>Zabbix 综合监控</li>
<li>Cacti 流量监控</li>
<li><strong>Prometheus</strong></li>
</ul>
<h2 id="二、Prometheus简介"><a href="#二、Prometheus简介" class="headerlink" title="二、Prometheus简介"></a>二、Prometheus简介</h2><h3 id="2-1-Prometheus是什么"><a href="#2-1-Prometheus是什么" class="headerlink" title="2.1 Prometheus是什么"></a>2.1 Prometheus是什么</h3><p>Prometheus是由SoundCloud开发的开源监控报警系统和TSDB(Time Series Database，时序列数据库)。受启发于Google的BorgMon监控系统，使用Go语言编写，从2012年开始由前Google工程师在Soundcloud以开源软件的形式进行研发，并且于2015年早期对外发布早期版本。2016年5月继Kubernetes之后成为第二个正式加入CNCF基金会的项目，同年6月正式发布1.0版本。2017年底发布了基于全新存储层的2.0版本，能更好地与容器平台、云平台配合。</p>
<p>有关 Prometheus 的详细信息，请参考<a href="https://prometheus.io/docs/introduction/overview/">官方介绍</a></p>
<p><img src="https://gblobscdn.gitbook.com/assets%2F-LBdoxo9EmQ0bJP2BuUi%2F-LPMFlGDFIX7wuLhSHx9%2F-LPMFo9ZTdKYHyFzu4DJ%2Fprometheus-release-roadmaps.png?alt=media" alt=""></p>
<h3 id="2-2-Prometheus的特点"><a href="#2-2-Prometheus的特点" class="headerlink" title="2.2 Prometheus的特点"></a>2.2 Prometheus的特点</h3><ul>
<li>由指标名称和键值对标签标识的时间序列数据组成的多维度数据模型</li>
<li>灵活的查询语言（PromQL）</li>
<li>不依赖分布式存储，单个服务节点具有自治能力</li>
<li>通过基于HTTP的pull方式采集时序数据</li>
<li>可以通过中间网关进行时序列数据推送（Pushgateway）</li>
<li>通过服务发现或者静态配置来发现目标服务对象</li>
<li>支持多种可视化图标和界面展示（Grafana，PromDash）</li>
</ul>
<h3 id="2-2-Prometheus的架构"><a href="#2-2-Prometheus的架构" class="headerlink" title="2.2 Prometheus的架构"></a>2.2 Prometheus的架构</h3><p>Prometheus整体架构及生态系统组件如下：</p>
<p><img src="https://newmorning.oss-cn-shanghai.aliyuncs.com/img/9Qt5yi.jpg" alt=""></p>
<h3 id="2-3-Prometheus如何实现监控"><a href="#2-3-Prometheus如何实现监控" class="headerlink" title="2.3 Prometheus如何实现监控"></a>2.3 Prometheus如何实现监控</h3><p>在Prometheus的架构设计中，Prometheus Server并不直接服务监控特定的目标，其主要任务负责数据的收集，存储并且对外提供数据查询支持。因此为了能够监控到某些东西，如主机的CPU使用率，我们需要使用到<strong>Exporter</strong>。Prometheus周期性的从Exporter暴露的HTTP服务地址（通常是/metrics）拉取监控样本数据。</p>
<pre><code>Exporter可以是一个独立运行的程序独立于监控目标以外，也可以是直接内置在监控目标中。只要能够向Prometheus提供标准格式的监控样本数据即可。</code></pre><h3 id="2-4-Prometheus-适用于什么场景"><a href="#2-4-Prometheus-适用于什么场景" class="headerlink" title="2.4 Prometheus 适用于什么场景"></a>2.4 Prometheus 适用于什么场景</h3><p>Prometheus 适用于记录文本格式的时间序列，它既适用于以机器为中心的监控，也适用于高度动态的面向服务架构的监控。在微服务的世界中，它对多维数据收集和查询的支持有特殊优势。Prometheus 是专为提高系统可靠性而设计的，它可以在断电期间快速诊断问题，每个 Prometheus Server 都是相互独立的，不依赖于网络存储或其他远程服务。当基础架构出现故障时，你可以通过 Prometheus 快速定位故障点，而且不会消耗大量的基础架构资源。</p>
<h3 id="2-5-Prometheus-不适合什么场景"><a href="#2-5-Prometheus-不适合什么场景" class="headerlink" title="2.5 Prometheus 不适合什么场景"></a>2.5 Prometheus 不适合什么场景</h3><p>Prometheus 非常重视可靠性，即使在出现故障的情况下，你也可以随时查看有关系统的可用统计信息。如果你需要百分之百的准确度，例如按请求数量计费，那么 Prometheus 不太适合你，因为它收集的数据可能不够详细完整。这种情况下，你最好使用其他系统来收集和分析数据以进行计费，并使用 Prometheus 来监控系统的其余部分。</p>
<h2 id="三、基本概念"><a href="#三、基本概念" class="headerlink" title="三、基本概念"></a>三、基本概念</h2><p>本章节主要参考<a href="https://prometheus.io/docs/introduction/overview/">官方文档</a>。</p>
<h3 id="3-1-数据模型"><a href="#3-1-数据模型" class="headerlink" title="3.1 数据模型"></a>3.1 数据模型</h3><p>Prometheus 所有采集的监控数据均以指标（metric）的形式保存在内置的<a href="https://www.wikiwand.com/zh/時間序列">时间序列</a>数据库当中（TSDB）：属于同一指标名称，同一标签集合的、有时间戳标记的数据流。除了存储的时间序列，Prometheus 还可以根据查询请求产生临时的、衍生的时间序列作为返回结果。</p>
<h4 id="3-1-1-指针名称和标签"><a href="#3-1-1-指针名称和标签" class="headerlink" title="3.1.1 指针名称和标签"></a>3.1.1 指针名称和标签</h4><p>每一条时间序列由指标名称（Metrics Name）以及一组标签（键值对）唯一标识。其中指标的名称（metric name）可以反映被监控样本的含义（例如，<code>http_requests_total</code> — 表示当前系统接收到的 HTTP 请求总量），指标名称只能由 ASCII 字符、数字、下划线以及冒号组成，同时必须匹配正则表达式 <code>[a-zA-Z_:][a-zA-Z0-9_:]*</code>。</p>
<blockquote>
<p><strong>[info] 注意</strong></p>
<p>冒号用来表示用户自定义的记录规则，不能在 exporter 中或监控对象直接暴露的指标中使用冒号来定义指标名称。</p>
</blockquote>
<p>通过使用标签，Prometheus 开启了强大的多维数据模型：对于相同的指标名称，通过不同标签列表的集合，会形成特定的度量维度实例（例如：所有包含度量名称为 <code>/api/tracks</code> 的 http 请求，打上 <code>method=POST</code> 的标签，就会形成具体的 http 请求）。该查询语言在这些指标和标签列表的基础上进行过滤和聚合。改变任何度量指标上的任何标签值（包括添加或删除指标），都会创建新的时间序列。</p>
<p>标签的名称只能由 ASCII 字符、数字以及下划线组成并满足正则表达式 <code>[a-zA-Z_][a-zA-Z0-9_]*</code>。其中以 <code>__</code> 作为前缀的标签，是系统保留的关键字，只能在系统内部使用。标签的值则可以包含任何 <code>Unicode</code> 编码的字符。</p>
<p>更多详细内容请参考 <a href="https://github.com/yangchuansheng/prometheus-handbook/tree/e8b31d4417a188994d05ecd1fce3f38c99cf8968/practices/naming.html">指标和标签命名最佳实践</a>。</p>
<h4 id="3-1-2-样本"><a href="#3-1-2-样本" class="headerlink" title="3.1.2 样本"></a>3.1.2 样本</h4><p>在时间序列中的每一个点称为一个样本（sample），样本由以下三部分组成：</p>
<ul>
<li>指标（metric）：指标名称和描述当前样本特征的 labelsets；</li>
<li>时间戳（timestamp）：一个精确到毫秒的时间戳；</li>
<li>样本值（value）： 一个 folat64 的浮点型数据表示当前样本的值。</li>
</ul>
<h4 id="3-1-3-表达方式"><a href="#3-1-3-表达方式" class="headerlink" title="3.1.3 表达方式"></a>3.1.3 表达方式</h4><p>通过如下表达方式表示指定指标名称和指定标签集合的时间序列：</p>
<pre class="line-numbers language-none"><code class="language-none">&lt;metric name&gt;&#123;&lt;label name&gt;&#x3D;&lt;label value&gt;, ...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>例如，指标名称为 <code>api_http_requests_total</code>，标签为 <code>method=&quot;POST&quot;</code> 和 <code>handler=&quot;/messages&quot;</code> 的时间序列可以表示为：</p>
<pre class="line-numbers language-none"><code class="language-none">api_http_requests_total&#123;method&#x3D;&quot;POST&quot;, handler&#x3D;&quot;&#x2F;messages&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>这与 <a href="http://opentsdb.net/">OpenTSDB</a> 中使用的标记法相同。</p>
<h3 id="3-2-指针类型"><a href="#3-2-指针类型" class="headerlink" title="3.2 指针类型"></a>3.2 指针类型</h3><p>Prometheus 的客户端库中提供了四种核心的指标类型。但这些类型只是在客户端库（客户端可以根据不同的数据类型调用不同的 API 接口）和在线协议中，实际在 Prometheus server 中并不对指标类型进行区分，而是简单地把这些指标统一视为无类型的时间序列。不过，将来我们会努力改变这一现状的。</p>
<h4 id="3-2-1-Counter（计数器）"><a href="#3-2-1-Counter（计数器）" class="headerlink" title="3.2.1 Counter（计数器）"></a>3.2.1 Counter（计数器）</h4><p>Counter 类型代表一种样本数据单调递增的指标，即只增不减，除非监控系统发生了重置。例如，你可以使用 counter 类型的指标来表示服务的请求数、已完成的任务数、错误发生的次数等。counter 主要有两个方法：</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;将counter值加1.
Inc()
&#x2F;&#x2F; 将指定值加到counter值上，如果指定值&lt;0 会panic.
Add(float64)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>Counter 类型数据可以让用户方便的了解事件产生的速率的变化，在 PromQL 内置的相关操作函数可以提供相应的分析，比如以 HTTP 应用请求量来进行说明：</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;通过rate()函数获取HTTP请求量的增长率
rate(http_requests_total[5m])
&#x2F;&#x2F;查询当前系统中，访问量前10的HTTP地址
topk(10, http_requests_total)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>不要将 counter 类型应用于样本数据非单调递增的指标，例如：当前运行的进程数量（应该用 Gauge 类型）。</p>
<p>不同语言关于 Counter 的客户端库使用文档：</p>
<ul>
<li><a href="http://godoc.org/github.com/prometheus/client_golang/prometheus#Counter">Go</a></li>
<li><a href="https://github.com/prometheus/client_java/blob/master/simpleclient/src/main/java/io/prometheus/client/Counter.java">Java</a></li>
<li><a href="https://github.com/prometheus/client_python#counter">Python</a></li>
<li><a href="https://github.com/prometheus/client_ruby#counter">Ruby</a></li>
</ul>
<h4 id="3-2-2-Gauge（仪表盘）"><a href="#3-2-2-Gauge（仪表盘）" class="headerlink" title="3.2.2 Gauge（仪表盘）"></a>3.2.2 Gauge（仪表盘）</h4><p>Gauge 类型代表一种样本数据可以任意变化的指标，即可增可减。Gauge 通常用于像温度或者内存使用率这种指标数据，也可以表示能随时增加或减少的“总数”，例如：当前并发请求的数量。</p>
<p>对于 Gauge 类型的监控指标，通过 PromQL 内置函数 <a href="https://www.yangcs.net/prometheus/3-prometheus/functions.html#delta">delta()</a> 可以获取样本在一段时间内的变化情况，例如，计算 CPU 温度在两小时内的差异：</p>
<pre class="line-numbers language-none"><code class="language-none">dalta(cpu_temp_celsius&#123;host&#x3D;&quot;zeus&quot;&#125;[2h])<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>你还可以通过PromQL 内置函数 <a href="https://www.yangcs.net/prometheus/3-prometheus/functions.html#predictlinear">predict_linear()</a> 基于简单线性回归的方式，对样本数据的变化趋势做出预测。例如，基于 2 小时的样本数据，来预测主机可用磁盘空间在 4 个小时之后的剩余情况：</p>
<pre class="line-numbers language-none"><code class="language-none">predict_linear(node_filesystem_free&#123;job&#x3D;&quot;node&quot;&#125;[2h], 4 * 3600) &lt; 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>不同语言关于 Gauge 的客户端库使用文档：</p>
<ul>
<li><a href="http://godoc.org/github.com/prometheus/client_golang/prometheus#Gauge">Go</a></li>
<li><a href="https://github.com/prometheus/client_java/blob/master/simpleclient/src/main/java/io/prometheus/client/Gauge.java">Java</a></li>
<li><a href="https://github.com/prometheus/client_python#gauge">Python</a></li>
<li><a href="https://github.com/prometheus/client_ruby#gauge">Ruby</a></li>
</ul>
<h4 id="3-2-3-Histogram-（直方图）"><a href="#3-2-3-Histogram-（直方图）" class="headerlink" title="3.2.3 Histogram （直方图）"></a>3.2.3 Histogram （直方图）</h4><p>在大多数情况下人们都倾向于使用某些量化指标的平均值，例如 CPU 的平均使用率、页面的平均响应时间。这种方式的问题很明显，以系统 API 调用的平均响应时间为例：如果大多数 API 请求都维持在 100ms 的响应时间范围内，而个别请求的响应时间需要 5s，那么就会导致某些 WEB 页面的响应时间落到中位数的情况，而这种现象被称为<strong>长尾问题</strong>。</p>
<p>为了区分是平均的慢还是长尾的慢，最简单的方式就是按照请求延迟的范围进行分组。例如，统计延迟在 0<del>10ms 之间的请求数有多少而 10</del>20ms 之间的请求数又有多少。通过这种方式可以快速分析系统慢的原因。Histogram 和 Summary 都是为了能够解决这样问题的存在，通过 Histogram 和 Summary 类型的监控指标，我们可以快速了解监控样本的分布情况。</p>
<p>Histogram 在一段时间范围内对数据进行采样（通常是请求持续时间或响应大小等），并将其计入可配置的存储桶（bucket）中，后续可通过指定区间筛选样本，也可以统计样本总数，最后一般将数据展示为直方图。</p>
<p>Histogram 类型的样本会提供三种指标（假设指标名称为 <code>&lt;basename&gt;</code>）：</p>
<ul>
<li><p>样本的值分布在 bucket 中的数量，命名为 <code>&lt;basename&gt;_bucket&#123;le=&quot;&lt;上边界&gt;&quot;&#125;</code>。解释的更通俗易懂一点，这个值表示指标值小于等于上边界的所有样本数量。</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 在总共2次请求当中。http 请求响应时间 &lt;&#x3D;0.005 秒 的请求次数为0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;0.005&quot;,&#125; 0.0
&#x2F;&#x2F; 在总共2次请求当中。http 请求响应时间 &lt;&#x3D;0.01 秒 的请求次数为0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;0.01&quot;,&#125; 0.0
&#x2F;&#x2F; 在总共2次请求当中。http 请求响应时间 &lt;&#x3D;0.025 秒 的请求次数为0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;0.025&quot;,&#125; 0.0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;0.05&quot;,&#125; 0.0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;0.075&quot;,&#125; 0.0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;0.1&quot;,&#125; 0.0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;0.25&quot;,&#125; 0.0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;0.5&quot;,&#125; 0.0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;0.75&quot;,&#125; 0.0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;1.0&quot;,&#125; 0.0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;2.5&quot;,&#125; 0.0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;5.0&quot;,&#125; 0.0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;7.5&quot;,&#125; 2.0
&#x2F;&#x2F; 在总共2次请求当中。http 请求响应时间 &lt;&#x3D;10 秒 的请求次数为 2
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;10.0&quot;,&#125; 2.0
io_namespace_http_requests_latency_seconds_histogram_bucket&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,le&#x3D;&quot;+Inf&quot;,&#125; 2.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>所有样本值的大小总和，命名为 <code>&lt;basename&gt;_sum</code>。</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 实际含义： 发生的2次 http 请求总的响应时间为 13.107670803000001 秒
io_namespace_http_requests_latency_seconds_histogram_sum&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,&#125; 13.107670803000001<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>样本总数，命名为 <code>&lt;basename&gt;_count</code>。值和 <code>&lt;basename&gt;_bucket&#123;le=&quot;+Inf&quot;&#125;</code> 相同。</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 实际含义： 当前一共发生了 2 次 http 请求
io_namespace_http_requests_latency_seconds_histogram_count&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,&#125; 2.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

</li>
</ul>
<blockquote>
<p><strong>[info] 注意</strong></p>
<p>bucket 可以理解为是对数据指标值域的一个划分，划分的依据应该基于数据值的分布。注意后面的采样点是包含前面的采样点的，假设 <code>xxx_bucket&#123;...,le=&quot;0.01&quot;&#125;</code> 的值为 10，而 <code>xxx_bucket&#123;...,le=&quot;0.05&quot;&#125;</code> 的值为 30，那么意味着这 30 个采样点中，有 10 个是小于 10 ms 的，其余 20 个采样点的响应时间是介于 10 ms 和 50 ms 之间的。</p>
</blockquote>
<p>可以通过 <a href="https://www.yangcs.net/prometheus/3-prometheus/functions.html#histogramquantile">histogram_quantile() 函数</a>来计算 Histogram 类型样本的<a href="https://www.wikiwand.com/zh-hans/分位数">分位数</a>。分位数可能不太好理解，你可以理解为分割数据的点。我举个例子，假设样本的 9 分位数（quantile=0.9）的值为 x，即表示小于 x 的采样值的数量占总体采样值的 90%。Histogram 还可以用来计算应用性能指标值（<a href="https://www.wikiwand.com/en/Apdex">Apdex score</a>）。</p>
<p>不同语言关于 Histogram 的客户端库使用文档：</p>
<ul>
<li><a href="http://godoc.org/github.com/prometheus/client_golang/prometheus#Histogram">Go</a></li>
<li><a href="https://github.com/prometheus/client_java/blob/master/simpleclient/src/main/java/io/prometheus/client/Histogram.java">Java</a></li>
<li><a href="https://github.com/prometheus/client_python#histogram">Python</a></li>
<li><a href="https://github.com/prometheus/client_ruby#histogram">Ruby</a></li>
</ul>
<h4 id="3-2-4-Summary-（摘要）"><a href="#3-2-4-Summary-（摘要）" class="headerlink" title="3.2.4 Summary （摘要）"></a>3.2.4 Summary （摘要）</h4><p>与 Histogram 类型类似，用于表示一段时间内的数据采样结果（通常是请求持续时间或响应大小等），但它直接存储了分位数（通过客户端计算，然后展示出来），而不是通过区间来计算。</p>
<p>Summary 类型的样本也会提供三种指标（假设指标名称为 ）：</p>
<ul>
<li><p>样本值的分位数分布情况，命名为 <code>&lt;basename&gt;&#123;quantile=&quot;&lt;φ&gt;&quot;&#125;</code>。</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 含义：这 12 次 http 请求中有 50% 的请求响应时间是 3.052404983s
io_namespace_http_requests_latency_seconds_summary&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,quantile&#x3D;&quot;0.5&quot;,&#125; 3.052404983
&#x2F;&#x2F; 含义：这 12 次 http 请求中有 90% 的请求响应时间是 8.003261666s
io_namespace_http_requests_latency_seconds_summary&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,quantile&#x3D;&quot;0.9&quot;,&#125; 8.003261666<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>所有样本值的大小总和，命名为 <code>&lt;basename&gt;_sum</code>。</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 含义：这12次 http 请求的总响应时间为 51.029495508s
io_namespace_http_requests_latency_seconds_summary_sum&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,&#125; 51.029495508<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>样本总数，命名为 <code>&lt;basename&gt;_count</code>。</p>
<pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 含义：当前一共发生了 12 次 http 请求
io_namespace_http_requests_latency_seconds_summary_count&#123;path&#x3D;&quot;&#x2F;&quot;,method&#x3D;&quot;GET&quot;,code&#x3D;&quot;200&quot;,&#125; 12.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

</li>
</ul>
<p>现在可以总结一下 Histogram 与 Summary 的异同：</p>
<ul>
<li>它们都包含了 <code>&lt;basename&gt;_sum</code> 和 <code>&lt;basename&gt;_count</code> 指标</li>
<li>Histogram 需要通过 <code>&lt;basename&gt;_bucket</code> 来计算分位数，而 Summary 则直接存储了分位数的值。</li>
</ul>
<p>关于 Summary 与 Histogram 的详细用法，请参考 <a href="https://prometheus.io/docs/practices/histograms">histograms and summaries</a>。</p>
<p>不同语言关于 Summary 的客户端库使用文档：</p>
<ul>
<li><a href="http://godoc.org/github.com/prometheus/client_golang/prometheus#Summary">Go</a></li>
<li><a href="https://github.com/prometheus/client_java/blob/master/simpleclient/src/main/java/io/prometheus/client/Summary.java">Java</a></li>
<li><a href="https://github.com/prometheus/client_python#summary">Python</a></li>
<li><a href="https://github.com/prometheus/client_ruby#summary">Ruby</a></li>
</ul>
<h2 id="四、安装部署"><a href="#四、安装部署" class="headerlink" title="四、安装部署"></a>四、安装部署</h2><p>Prometheus基于Golang编写，编译后的软件包，不依赖于任何的第三方依赖。用户只需要下载对应平台的二进制包，解压并且添加基本的配置即可正常启动Prometheus Server。</p>
<h3 id="4-1-二进制安装"><a href="#4-1-二进制安装" class="headerlink" title="4.1 二进制安装"></a>4.1 二进制安装</h3><p>从官网<a href="https://prometheus.io/download/">下载Prometheus</a>，执行以下命令</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">VERSION</span><span class="token operator">=</span><span class="token punctuation">&#123;</span>选择版本号<span class="token punctuation">&#125;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">OS</span><span class="token operator">=</span><span class="token punctuation">&#123;</span>选择平台<span class="token punctuation">&#125;</span>
<span class="token function">curl</span> -LO https://github.com/prometheus/prometheus/releases/download/v<span class="token variable">$VERSION</span>/prometheus-<span class="token variable">$VERSION</span><span class="token builtin class-name">.</span><span class="token variable">$OS</span>.tar.gz
<span class="token function">tar</span> -zxvf promtheus-<span class="token variable">$&#123;VERSION&#125;</span><span class="token builtin class-name">.</span><span class="token variable">$&#123;OS&#125;</span>.tar.gz
<span class="token builtin class-name">cd</span> promtheus-<span class="token variable">$&#123;VERSION&#125;</span><span class="token builtin class-name">.</span><span class="token variable">$&#123;OS&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>解压后当前目录会包含默认的Prometheus配置文件<code>prometheus.yml</code>：</p>
<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">global</span><span class="token punctuation">:</span>
  <span class="token key atrule">scrape_interval</span><span class="token punctuation">:</span>     15s <span class="token comment"># By default, scrape targets every 15 seconds.</span>

  <span class="token comment"># Attach these labels to any time series or alerts when communicating with</span>
  <span class="token comment"># external systems (federation, remote storage, Alertmanager).</span>
  <span class="token key atrule">external_labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">monitor</span><span class="token punctuation">:</span> <span class="token string">'codelab-monitor'</span>

<span class="token comment"># A scrape configuration containing exactly one endpoint to scrape:</span>
<span class="token comment"># Here it's Prometheus itself.</span>
<span class="token key atrule">scrape_configs</span><span class="token punctuation">:</span>
  <span class="token comment"># The job name is added as a label `job=&lt;job_name>` to any timeseries scraped from this config.</span>
  <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'prometheus'</span>

    <span class="token comment"># Override the global default and scrape targets from this job every 5 seconds.</span>
    <span class="token key atrule">scrape_interval</span><span class="token punctuation">:</span> 5s

    <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'localhost:9090'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>完整的配置选项说明，请查看<a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/">官方配置文档</a></p>
<h4 id="4-1-1-My-Prometheus-yml"><a href="#4-1-1-My-Prometheus-yml" class="headerlink" title="4.1.1 My Prometheus.yml"></a>4.1.1 My Prometheus.yml</h4><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 全局设置</span>
<span class="token key atrule">global</span><span class="token punctuation">:</span>
  <span class="token comment"># 设置抓取间隔，默认为1分钟</span>
  <span class="token key atrule">scrape_interval</span><span class="token punctuation">:</span> 15s 

  <span class="token comment"># 设置抓取超时时间，默认为10秒  </span>
  <span class="token key atrule">scrape_timeout</span><span class="token punctuation">:</span> 10s

  <span class="token comment"># 设置规则刷新间隔，默认为1分钟</span>
  <span class="token key atrule">evaluation_interval</span><span class="token punctuation">:</span> 15s 

<span class="token comment"># 告警配置</span>
<span class="token comment"># 一般使用Alertmanager</span>
<span class="token key atrule">alerting</span><span class="token punctuation">:</span>
 <span class="token key atrule">alertmanagers</span><span class="token punctuation">:</span>
 <span class="token punctuation">-</span> <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>
    <span class="token comment"># 设置alertmanager ip和端口</span>
   <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"localhost:9093"</span><span class="token punctuation">]</span>
 
<span class="token comment"># 规则配置</span>
<span class="token comment"># 配置会根据'evaluation_interval'设定刷新</span>
<span class="token key atrule">rule_files</span><span class="token punctuation">:</span>
   <span class="token comment"># Rule配置文件路径</span>
   <span class="token punctuation">-</span> <span class="token string">"./first_rules.yml"</span>
   <span class="token punctuation">-</span> <span class="token string">"/user/prometheus/second_rules.yml"</span>

<span class="token comment"># 抓取配置</span>
<span class="token key atrule">scrape_configs</span><span class="token punctuation">:</span>
    <span class="token comment"># 指定抓取任务名称，job=&lt;job_name>标签会被加入到指针序列中</span>
  <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'prometheus'</span>

    <span class="token comment"># metrics_path defaults to '/metrics'</span>
    <span class="token comment"># scheme defaults to 'http'.</span>

    <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>
    <span class="token comment"># 静态配置抓取目标，这里配置抓取prometheus本身</span>
    <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'localhost:9090'</span><span class="token punctuation">]</span>

  <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'node_exporter'</span>
    <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>
    <span class="token comment"># 多个target的第二种写法</span>
      <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> 172.16.2.30<span class="token punctuation">:</span><span class="token number">9100</span>
        <span class="token punctuation">-</span> 172.16.2.31<span class="token punctuation">:</span><span class="token number">9100</span>
        <span class="token punctuation">-</span> 172.16.2.32<span class="token punctuation">:</span><span class="token number">9100</span>
        <span class="token comment"># 使用labels可以添加自定义标签，这里添加了&#123;location="china"&#125;</span>
        <span class="token key atrule">labels</span><span class="token punctuation">:</span>
          <span class="token key atrule">location</span><span class="token punctuation">:</span> <span class="token string">'china'</span>

<span class="token comment"># 下面来点高级玩法</span>
  <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">'blackbox_http_2xx'</span>
    <span class="token comment"># 指定抓取目标的metrics路径，blackbox_exporter默认路径/probe</span>
    <span class="token key atrule">metrics_path</span><span class="token punctuation">:</span> /probe
    <span class="token key atrule">params</span><span class="token punctuation">:</span>
    <span class="token comment"># 指定需要使用的module，module可在对应exporter的yml文件中定义，具体参见exporter文档</span>
      <span class="token key atrule">module</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>http_2xx<span class="token punctuation">]</span>
    <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//www.baidu.com/
        <span class="token punctuation">-</span> https<span class="token punctuation">:</span>//www.google.com/
        <span class="token key atrule">labels</span><span class="token punctuation">:</span>
          <span class="token key atrule">group</span><span class="token punctuation">:</span> <span class="token string">'http_status'</span>
    <span class="token comment"># 使用relabel_config重定义标签</span>
    <span class="token key atrule">relabel_configs</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__address__<span class="token punctuation">]</span>
        <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __param_target
      <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__param_target<span class="token punctuation">]</span>
        <span class="token key atrule">target_label</span><span class="token punctuation">:</span> instance
      <span class="token punctuation">-</span> <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __address__
        <span class="token key atrule">replacement</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">9115</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="4-2-Dcoker安装"><a href="#4-2-Dcoker安装" class="headerlink" title="4.2 Dcoker安装"></a>4.2 Dcoker安装</h3><p>Docker用户直接使用prometheus镜像即可启动服务：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">docker run -p <span class="token number">9090</span>:9090 -v /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>



<h3 id="4-3-启动Prometheus"><a href="#4-3-启动Prometheus" class="headerlink" title="4.3 启动Prometheus"></a>4.3 启动Prometheus</h3><p>创建配置文件后，进入prometheus工作目录，执行命令启动：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Start Prometheus.</span>
<span class="token comment"># By default, Prometheus stores its database in ./data (flag --storage.tsdb.path).</span>
./prometheus --config.file<span class="token operator">=</span>prometheus.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ul>
<li>我的启动参数</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nohup</span> ./prometheus --query.max-samples<span class="token operator">=</span><span class="token number">120000000</span> --config.file<span class="token operator">=</span>/prometheus.yml --storage.tsdb.path<span class="token operator">=</span>/data/ --storage.tsdb.retention.time<span class="token operator">=</span>7d <span class="token operator">&amp;</span>
<span class="token comment"># --query.max-samples：设置最大查询样本量</span>
<span class="token comment"># --storage.tsdb.path：设置数据存储路径</span>
<span class="token comment"># --storage.tsdb.retention.time：数据保存时长</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>启动完成后，可以通过<a href="http://localhost:9090访问Prometheus的UI界面：">http://localhost:9090访问Prometheus的UI界面：</a></p>
<p><img src="C:%5CUsers%5C%E6%A0%BE%E6%96%B0%E6%99%A8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200617171304479.png" alt="image-20200617171304479"></p>
<h3 id="4-4-发现服务"><a href="#4-4-发现服务" class="headerlink" title="4.4 发现服务"></a>4.4 发现服务</h3><h2 id="五、查询表达式"><a href="#五、查询表达式" class="headerlink" title="五、查询表达式"></a>五、查询表达式</h2><p>Prometheus 提供了一种功能表达式语言 <code>PromQL</code>，允许用户实时选择和汇聚时间序列数据。表达式的结果可以在浏览器中显示为图形，也可以显示为表格数据，或者由外部系统通过 <a href="https://prometheus.io/docs/prometheus/latest/querying/api/">HTTP API</a> 调用。</p>
<p>详细参考<a href="https://prometheus.io/docs/prometheus/latest/querying/basics/">PromQL</a></p>
<h2 id="六、Grafana数据可视化"><a href="#六、Grafana数据可视化" class="headerlink" title="六、Grafana数据可视化"></a>六、Grafana数据可视化</h2><h3 id="6-1-部署配置"><a href="#6-1-部署配置" class="headerlink" title="6.1 部署配置"></a>6.1 部署配置</h3><h3 id="6-2-监控模块"><a href="#6-2-监控模块" class="headerlink" title="6.2 监控模块"></a>6.2 监控模块</h3><h3 id="6-3-Dashboard"><a href="#6-3-Dashboard" class="headerlink" title="6.3 Dashboard"></a>6.3 Dashboard</h3><h2 id="七、Alertmanager告警管理"><a href="#七、Alertmanager告警管理" class="headerlink" title="七、Alertmanager告警管理"></a>七、Alertmanager告警管理</h2><h3 id="7-1-部署配置"><a href="#7-1-部署配置" class="headerlink" title="7.1 部署配置"></a>7.1 部署配置</h3><h3 id="7-2-告警规则"><a href="#7-2-告警规则" class="headerlink" title="7.2 告警规则"></a>7.2 告警规则</h3><h3 id="7-3-集成邮箱-amp-微信告警"><a href="#7-3-集成邮箱-amp-微信告警" class="headerlink" title="7.3 集成邮箱&amp;微信告警"></a>7.3 集成邮箱&amp;微信告警</h3><h2 id="八、Pushgateway"><a href="#八、Pushgateway" class="headerlink" title="八、Pushgateway"></a>八、Pushgateway</h2><h2 id="九、自定义Exporter"><a href="#九、自定义Exporter" class="headerlink" title="九、自定义Exporter"></a>九、自定义Exporter</h2><h3 id="9-1-Exporter的工作机制"><a href="#9-1-Exporter的工作机制" class="headerlink" title="9.1 Exporter的工作机制"></a>9.1 Exporter的工作机制</h3><h3 id="9-2-构建Exporter"><a href="#9-2-构建Exporter" class="headerlink" title="9.2 构建Exporter"></a>9.2 构建Exporter</h3><h2 id="十、实战案例：ESXi宿主机RAID监控"><a href="#十、实战案例：ESXi宿主机RAID监控" class="headerlink" title="十、实战案例：ESXi宿主机RAID监控"></a>十、实战案例：ESXi宿主机RAID监控</h2><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><h4 id="Install-amp-Configuration"><a href="#Install-amp-Configuration" class="headerlink" title="Install &amp; Configuration"></a>Install &amp; Configuration</h4><p><a href="https://yunlzheng.gitbook.io/prometheus-book/">https://yunlzheng.gitbook.io/prometheus-book/</a></p>
<h4 id="PromQL"><a href="#PromQL" class="headerlink" title="PromQL"></a>PromQL</h4><p><a href="https://prometheus.fuckcloudnative.io/di-san-zhang-prometheus/di-4-jie-cha-xun/basics">https://prometheus.fuckcloudnative.io/di-san-zhang-prometheus/di-4-jie-cha-xun/basics</a></p>
<h4 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h4><p><a href="https://www.dell.com/support/article/zh-cn/sln292232/extracting-the-raid-controller-logs-via-megacli?lang=en">https://www.dell.com/support/article/zh-cn/sln292232/extracting-the-raid-controller-logs-via-megacli?lang=en</a></p>
<p><a href="https://github.com/prometheus/pushgateway/blob/master/README.md">https://github.com/prometheus/pushgateway/blob/master/README.md</a></p>
<p><a href="https://github.com/prometheus/node_exporter">https://github.com/prometheus/node_exporter</a></p>
<p><a href="https://github.com/pryorda/vmware_exporter">https://github.com/pryorda/vmware_exporter</a></p>
<p><a href="https://github.com/coreos/prometheus-operator/blob/master/Documentation/high-availability.md">https://github.com/coreos/prometheus-operator/blob/master/Documentation/high-availability.md</a></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>监控</tag>
        <tag>Prometheus</tag>
      </tags>
  </entry>
</search>
